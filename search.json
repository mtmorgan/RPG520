[{"path":[]},{"path":"https://mtmorgan.github.io/RPG520/articles/day_1.html","id":"essential-r","dir":"Articles","previous_headings":"","what":"Essential R","title":"Day 1: Introduction to the CCR, and to R","text":"simple calculator ‘Vectors’ building blocks Variables, missing values ‘factors’ Data structures coordinate related vectors – data.frame Key operations data.frame df[1:3, c(\"gender\", \"age\")] – subset rows columns df[[\"age\"]], df$age – select columns Functions   ‘Vectorized’ operations, e.g., element-wise addition without explicit ‘’ loop. following creates vector y element-wise addition 100 elements vector x 100 random normal deviates. x y related, place columns data.frame(). 100 rows data.frame(), head() shows first 6 rows. statistical relationship y x, specifically, y equal x plus random noise. Visualize using plot().  looks like linear relationship; can demonstrate statistically? Use lm() function fit linear model relationship y x: adding regression line scatter plot? plotting points, adding abline() add straight line implied linear model fit.","code":"1 + 1 ## [1] 2 c(1, 2, 3) ## [1] 1 2 3 c(\"January\", \"February\", \"March\") ## [1] \"January\"  \"February\" \"March\" c(TRUE, FALSE) ## [1]  TRUE FALSE age <- c(27, NA, 32, 29) gender <- factor(     c(\"Female\", \"Male\", \"Non-binary\", NA),     levels = c(\"Female\", \"Male\", \"Non-binary\") ) df <- data.frame(     age = c(27, NA, 32, 29),     gender = gender ) df ##   age     gender ## 1  27     Female ## 2  NA       Male ## 3  32 Non-binary ## 4  29       <NA> rnorm(5)        # 5 random normal deviates ## [1] -0.3976848  0.3621376  0.4417459 -0.5625474  0.6607328 x <- rnorm(100) # 100 random normal deviates hist(x)         # histogram, approximately normal plot(density(x)) # a little more sophisticated? y <- x + rnorm(100) df <- data.frame(x, y) nrow(df) ## [1] 100 head(df) ##              x          y ## 1  0.232677696 -1.0772829 ## 2  0.133734733  0.3236260 ## 3 -2.195795624 -2.9450484 ## 4  0.078311309 -0.2116148 ## 5 -0.006264432 -0.9629767 ## 6  2.075528659  0.4115784 plot(y ~ x, df) fit <- lm(y ~ x, df) fit           # an R 'object' containing information about the ##  ## Call: ## lm(formula = y ~ x, data = df) ##  ## Coefficients: ## (Intercept)            x   ##     0.01965      0.93096               # regression of y on x summary(fit)  # statistical summary of linear regression ##  ## Call: ## lm(formula = y ~ x, data = df) ##  ## Residuals: ##      Min       1Q   Median       3Q      Max  ## -2.30453 -0.70968 -0.01096  0.60011  1.95997  ##  ## Coefficients: ##             Estimate Std. Error t value Pr(>|t|)     ## (Intercept)  0.01965    0.09135   0.215     0.83     ## x            0.93096    0.08434  11.038   <2e-16 *** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## Residual standard error: 0.8972 on 98 degrees of freedom ## Multiple R-squared:  0.5542, Adjusted R-squared:  0.5496  ## F-statistic: 121.8 on 1 and 98 DF,  p-value: < 2.2e-16 plot(y ~ x, df) abline(lm(y ~ x, df))"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_1.html","id":"a-little-more-advanced","dir":"Articles","previous_headings":"Essential R","what":"A little more advanced…","title":"Day 1: Introduction to the CCR, and to R","text":"Write functions Iterate, usually lapply() although () available","code":"hello <- function(who) {     paste(\"hello\", who, \"with\", nchar(who), \"letters in your name\") } hello(\"Martin\") ## [1] \"hello Martin with 6 letters in your name\" names <- c(\"Martin\", \"Thomas\") lapply(names, hello) ## [[1]] ## [1] \"hello Martin with 6 letters in your name\" ##  ## [[2]] ## [1] \"hello Thomas with 6 letters in your name\""},{"path":"https://mtmorgan.github.io/RPG520/articles/day_1.html","id":"packages","dir":"Articles","previous_headings":"","what":"Packages","title":"Day 1: Introduction to the CCR, and to R","text":"Packages extend functionality base R. Can part ‘base’ distribution (lm() ‘stats’ package)… … package contributed users Comprehensive R Archive Network (CRAN), Bioconductor repositories. Use install.packages() install CRAN packages First install BiocManager CRAN, use BiocManager::install() install Bioconductor packages. particularly common suite packages ‘tidyverse’. use dplyr contributed CRAN package, load package dplyr ‘tibble’ like ‘data.frame’, user-friendly ggplot2 package often used visualizing data ggplot2 uses ‘grammar graphics’ assemble plot layers","code":"stats::lm(y ~ x) ##  ## Call: ## stats::lm(formula = y ~ x) ##  ## Coefficients: ## (Intercept)            x   ##     0.01965      0.93096 library(dplyr) tbl <- tibble(     x = rnorm(100),     y = x + rnorm(100) )  tbl # e.g., only displays the first 10 rows ## # A tibble: 100 × 2 ##         x      y ##     <dbl>  <dbl> ##  1 -1.87  -3.27  ##  2 -0.289  0.704 ##  3  0.468 -1.14  ##  4  0.798  3.31  ##  5 -1.04  -2.63  ##  6 -1.87  -2.57  ##  7  0.766  1.02  ##  8 -1.17  -1.65  ##  9 -0.771 -1.64  ## 10  0.741  0.761 ## # ℹ 90 more rows library(ggplot2) ggplot(tbl) +                    # use 'tbl' as a source of data for the plot     aes(x, y) +                  # use columns 'x' and 'y' for axes     geom_point() +               # add x and y coordinates as points     geom_smooth(method = \"lm\")   # add a regression line ## `geom_smooth()` using formula = 'y ~ x'"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_1.html","id":"learning-r","dir":"Articles","previous_headings":"","what":"Learning R","title":"Day 1: Introduction to the CCR, and to R","text":"Help Every function help page, e.g., Sections ‘Description’, ‘Usage’, ‘Arguments’ (often defaults), ‘Value’, ‘Examples’ Can quite difficult follow, usually quite helpful. Vignettes Many packages ‘vignettes’ illustrate package can used. Books Hands-Programming R introduces R programming. Basics provides elementary starting point. R Data Science book-length web spanning introductory advanced topics. One authors, Hadley Wickham, author dplyr ggplot2 packages, among others. Web resources Google can great place find general R resource, e.g., ‘survival analysis R’ StackOverflow useful trouble-shooting particular problems – ‘try fit linear model lm(mgp ~ cyl, mtcars) R says …, wrong?’. ChatGPT & friends can also useful, especially asking well-focused questions , e.g., asked ‘explain following R code’ help understand code someone else written. almost always disagreed specific code ChatGPT generates; sometimes simply work (e.g., use package ‘X’, ‘X’ package), dangerous situations code syntactically correct provides wrong answer. Use, extreme care!","code":"?data.frame vignette(package = \"dplyr\") ## Vignettes in package 'dplyr': ## ## colwise                 Column-wise operations (source, html) ## base                    dplyr <-> base R (source, html) ## grouping                Grouped data (source, html) ## dplyr                   Introduction to dplyr (source, html) ## programming             Programming with dplyr (source, html) ## rowwise                 Row-wise operations (source, html) ## two-table               Two-table verbs (source, html) ## in-packages             Using dplyr in packages (source, html) ## window-functions        Window functions (source, html)  vignette(package = \"dplyr\", \"dplyr\")"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_1.html","id":"grading-for-this-week","dir":"Articles","previous_headings":"","what":"Grading for this week","title":"Day 1: Introduction to the CCR, and to R","text":"task week write R script performs data management statistical analysis data set choice – essentially reproducing selected steps work Wednesday. provide (CCR server) file ‘your_name.R’. run file new R session using command source('your_name.R', echo = TRUE). read evaluate R command file. Grading 10, following thresholds 7 / 10 source('your_name.R', echo = TRUE) works without error. 8 / 10 scripts implement extensive analyses, present interesting complicated data. 10 / 10 work goes beyond material cover week, e.g., using ‘Rmarkdown’ present work, performing additional (appropriate) data manipulation steps using dplyr packages, additional visualizations statstical analyses. Note 7 / 10 score obtained copying & pasting (subset ) commands Wednesday’s lab ‘your_name.R’. Please feel free contact speak problems ideas.","code":""},{"path":"https://mtmorgan.github.io/RPG520/articles/day_1.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Day 1: Introduction to the CCR, and to R","text":"reproducibility, record software versions used create document","code":"sessionInfo() ## R version 4.3.2 (2023-10-31) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Ubuntu 22.04.3 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 ##  ## locale: ##  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        ##  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    ##  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           ## [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    ##  ## time zone: UTC ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] ggplot2_3.4.4     dplyr_1.1.4       RPG520_0.0.0.9001 ##  ## loaded via a namespace (and not attached): ##  [1] sass_0.4.8        utf8_1.2.4        generics_0.1.3    stringi_1.8.3     ##  [5] lattice_0.21-9    digest_0.6.34     magrittr_2.0.3    evaluate_0.23     ##  [9] grid_4.3.2        fastmap_1.1.1     jsonlite_1.8.8    Matrix_1.6-1.1    ## [13] mgcv_1.9-0        purrr_1.0.2       fansi_1.0.6       scales_1.3.0      ## [17] textshaping_0.3.7 jquerylib_0.1.4   cli_3.6.2         rlang_1.1.3       ## [21] munsell_0.5.0     splines_4.3.2     withr_3.0.0       cachem_1.0.8      ## [25] yaml_2.3.8        tools_4.3.2       memoise_2.0.1     colorspace_2.1-0  ## [29] vctrs_0.6.5       R6_2.5.1          lifecycle_1.0.4   stringr_1.5.1     ## [33] fs_1.6.3          ragg_1.2.7        pkgconfig_2.0.3   desc_1.4.3        ## [37] pkgdown_2.0.7     pillar_1.9.0      bslib_0.6.1       gtable_0.3.4      ## [41] glue_1.7.0        systemfonts_1.0.5 xfun_0.41         tibble_3.2.1      ## [45] tidyselect_1.2.0  highr_0.10        knitr_1.45        farver_2.1.1      ## [49] htmltools_0.5.7   nlme_3.1-163      rmarkdown_2.25    labeling_0.4.3    ## [53] compiler_4.3.2"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Day 2: Data Management, Visualization, and Analysis","text":"use two case studies today. studies used illustrate data manipulation statistical analysis tasks one might expect day--day wet- dry-lab work computational oncology. use functions dplyr package manage data. dplyr key package particular approach data management R called ‘tidyverse’. Tidy analysis uses standard data structure (tibble) relatively small number functions provide effective way accomplish many tasks. Start loading dplyr package. Functions ‘tidy’ data management include: filter() – filter data contain specific rows. select() – select subset columns. mutate() – change add columns. Example functions summarize data: count() – simple count entries column. summarize() – e.g., mean() var()iance one columns. group_by() – summarize data group. tidyr packages complement basic functionality tidyr::pivot_wider() – change ‘long’ table ‘wide’ table. See example . use readr package read data disk R. tidyr readr used less commonly, load R session yet. visualization, use ggplot2; details provided . Finally, statistical functions use ‘stats’ package distributed R.","code":"library(dplyr)"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"us-cdc-behavioral-risk-factor-surveillance-system-survey-data","dir":"Articles","previous_headings":"","what":"US CDC Behavioral Risk Factor Surveillance System survey data","title":"Day 2: Data Management, Visualization, and Analysis","text":"use data US Center Disease Control’s Behavioral Risk Factor Surveillance System (BRFSS) annual survey. Check web page little information. using small subset data, including random sample 20000 observations 1990 2010.","code":""},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"data-input","dir":"Articles","previous_headings":"US CDC Behavioral Risk Factor Surveillance System survey data","what":"Data input","title":"Day 2: Data Management, Visualization, and Analysis","text":"Use file.choose() find ‘BRFSS-subset.csv’ file CCR file system. Take peak data using readLines() function read first 3 lines data, cat(\"\\n\") print result terminal file ‘comma-separated value’ file. files can created , instance, using Excel’s ‘Export’ menu. first line consists column headers, separated comma. Subsequent lines represent rows data, comma separating columns. Read entire dataset R command readr::read_csv(). Assign data variable brfss.","code":"brfss_file_path <- file.choose() # look for 'Rpg520/week-04/extdata/BRFSS-subset.csv' readLines(brfss_file_path, 3) |>     cat(sep = \"\\n\") #> \"Age\",\"Weight\",\"Sex\",\"Height\",\"Year\" #> 31,48.9879760010809,\"Female\",157.48,\"1990\" #> 57,81.6466266684681,\"Female\",157.48,\"1990\" brfss <- readr::read_csv(brfss_file_path) #> Rows: 20000 Columns: 5 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (1): Sex #> dbl (4): Age, Weight, Height, Year #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. brfss #> # A tibble: 20,000 × 5 #>      Age Weight Sex    Height  Year #>    <dbl>  <dbl> <chr>   <dbl> <dbl> #>  1    31   49.0 Female   157.  1990 #>  2    57   81.6 Female   157.  1990 #>  3    43   80.3 Male     178.  1990 #>  4    72   70.3 Male     170.  1990 #>  5    31   49.9 Female   155.  1990 #>  6    58   54.4 Female   155.  1990 #>  7    45   69.9 Male     173.  1990 #>  8    37   68.0 Male     180.  1990 #>  9    33   65.8 Female   170.  1990 #> 10    75   70.8 Female   152.  1990 #> # ℹ 19,990 more rows"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"initial-cleaning","dir":"Articles","previous_headings":"US CDC Behavioral Risk Factor Surveillance System survey data","what":"Initial cleaning","title":"Day 2: Data Management, Visualization, and Analysis","text":"data pretty simple, two small changes make useful. ‘Sex’ ‘Year’ really factor values (can take specific levels, ‘Female’ ‘Male’ ‘Sex’, ‘1990’ ‘2010’ ‘Year’).","code":""},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"mutate","dir":"Articles","previous_headings":"US CDC Behavioral Risk Factor Surveillance System survey data > Initial cleaning","what":"Mutate","title":"Day 2: Data Management, Visualization, and Analysis","text":"factor can created ordinary vector x code like following: Use dplyr mutate() function change ‘Sex’ ‘Year’ factors. looks like ’s working, save updated data set","code":"x <- c(\"Male\", \"Female\", \"Female\", NA) factor(x, levels = c(\"Female\", \"Male\")) #> [1] Male   Female Female <NA>   #> Levels: Female Male  y <- c(2010, 1991, 1990, NA) factor(y, levels = c(\"1990\", \"2010\")) #> [1] 2010 <NA> 1990 <NA> #> Levels: 1990 2010 brfss |>     mutate(         Sex = factor(Sex, levels = c(\"Female\", \"Male\")),         Year = factor(Year, levels = c(\"1990\", \"2010\"))     ) #> # A tibble: 20,000 × 5 #>      Age Weight Sex    Height Year  #>    <dbl>  <dbl> <fct>   <dbl> <fct> #>  1    31   49.0 Female   157. 1990  #>  2    57   81.6 Female   157. 1990  #>  3    43   80.3 Male     178. 1990  #>  4    72   70.3 Male     170. 1990  #>  5    31   49.9 Female   155. 1990  #>  6    58   54.4 Female   155. 1990  #>  7    45   69.9 Male     173. 1990  #>  8    37   68.0 Male     180. 1990  #>  9    33   65.8 Female   170. 1990  #> 10    75   70.8 Female   152. 1990  #> # ℹ 19,990 more rows brfss <-     brfss |>     mutate(         Sex = factor(Sex, levels = c(\"Female\", \"Male\")),         Year = factor(Year, levels = c(\"1990\", \"2010\"))     )"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"data-exploration","dir":"Articles","previous_headings":"US CDC Behavioral Risk Factor Surveillance System survey data","what":"Data exploration","title":"Day 2: Data Management, Visualization, and Analysis","text":"good place start analysis basic data exploration. Perhaps straight-forward thing count number observations year.","code":""},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"count","dir":"Articles","previous_headings":"US CDC Behavioral Risk Factor Surveillance System survey data > Data exploration","what":"Count","title":"Day 2: Data Management, Visualization, and Analysis","text":"data chosen year number individuals. number females males year? determined responses survey, reflecting relative number males females population, least responding survey. number sex year? Use count() two () column names seems like Female respondents 2010 1990. Use tidyr‘s function pivot_wider() (remember look help page ?pivot_wider details function works) pivot ’Sex’ column entries column names.","code":"brfss |>     count(Year) #> # A tibble: 2 × 2 #>   Year      n #>   <fct> <int> #> 1 1990  10000 #> 2 2010  10000 brfss |>     count(Sex) #> # A tibble: 2 × 2 #>   Sex        n #>   <fct>  <int> #> 1 Female 12039 #> 2 Male    7961 brfss |>     count(Sex, Year) #> # A tibble: 4 × 3 #>   Sex    Year      n #>   <fct>  <fct> <int> #> 1 Female 1990   5718 #> 2 Female 2010   6321 #> 3 Male   1990   4282 #> 4 Male   2010   3679 brfss |>     count(Sex, Year) |>     tidyr::pivot_wider(names_from = \"Sex\", values_from = \"n\") #> # A tibble: 2 × 3 #>   Year  Female  Male #>   <fct>  <int> <int> #> 1 1990    5718  4282 #> 2 2010    6321  3679"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"summarize","dir":"Articles","previous_headings":"US CDC Behavioral Risk Factor Surveillance System survey data > Data exploration","what":"Summarize","title":"Day 2: Data Management, Visualization, and Analysis","text":"used tidyr::pivot_wider() instead just pivot_wider(). notation means ’use tidyr package, function package called pivot_wider(). notation avoid conflicts two packages function named pivot_wider(); also additional benefits related managing R’s .GlobalEnv, advanced topic. Use summarize() summaries complicated simple counts Nothing exciting , except perhaps note use metric system Weight (kg) Height (cm). function mean() calculates average corresponding column. na.rm = TRUE tells function remove NA (missing) values calculating mean. kind interesting. Suppose one vector calculated mean surprises. one values x missing? logic used R missing value number, mean anything – ’s unknown value, mean must also unknown! Often like calculate mean removing unknown values, na.rm = TRUE argument ","code":"brfss |>     summarize(         avg_age = mean(Age, na.rm = TRUE),         ave_wt = mean(Weight, na.rm = TRUE),         ave_ht = mean(Height, na.rm = TRUE)     ) #> # A tibble: 1 × 3 #>   avg_age ave_wt ave_ht #>     <dbl>  <dbl>  <dbl> #> 1    51.0   75.4   169. x <- c(1, 3, 5) mean(x) #> [1] 3 x <- c(1, 3, NA) mean(x) #> [1] NA mean(x, na.rm = TRUE) #> [1] 2"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"group","dir":"Articles","previous_headings":"US CDC Behavioral Risk Factor Surveillance System survey data > Data exploration","what":"Group","title":"Day 2: Data Management, Visualization, and Analysis","text":"Back data exploration, might expect average age, weight, height different Female Male respondents, perhaps also years. Use group_by() calculate summaries Sex Year shows interesting aspects data. Males average 15cm taller females; difference average height years. average age Female Male respondents greater 2010 1990. likely reflects changing demographics, ‘baby boom’ cohort ages. Note average Female age changes 10.9 years, whereas average Male age changes 12.3 years; perhaps reflects different life expectancy males females. Also interesting average weight changes, 8.2 kg (18 lbs) Female respondents, 7.6 kg (16.7 lbs) Males. people general become heavier, older people heavier younger people (reasons captured data).","code":"brfss |>     group_by(Sex, Year) |>     summarize(         avg_age = mean(Age, na.rm = TRUE),         ave_wt = mean(Weight, na.rm = TRUE),         ave_ht = mean(Height, na.rm = TRUE)     ) #> `summarise()` has grouped output by 'Sex'. You can override using the `.groups` #> argument. #> # A tibble: 4 × 5 #> # Groups:   Sex [2] #>   Sex    Year  avg_age ave_wt ave_ht #>   <fct>  <fct>   <dbl>  <dbl>  <dbl> #> 1 Female 1990     46.2   64.8   163. #> 2 Female 2010     57.1   73.0   163. #> 3 Male   1990     43.9   81.2   178. #> 4 Male   2010     56.2   88.8   178."},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"filter","dir":"Articles","previous_headings":"US CDC Behavioral Risk Factor Surveillance System survey data > Data exploration","what":"Filter","title":"Day 2: Data Management, Visualization, and Analysis","text":"Use filter() create subset data containing 2010 respondents, another subset containing Male respondents.","code":"brfss_2010 <-     brfss |>     filter(Year == \"2010\")  brfss_male <-     brfss |>     filter(Sex == \"Male\")"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"visual-exploration","dir":"Articles","previous_headings":"US CDC Behavioral Risk Factor Surveillance System survey data","what":"Visual exploration","title":"Day 2: Data Management, Visualization, and Analysis","text":"use ggplot2 package visually explore data. use several functions package, load R session. ggplot2 constructs plots adding layers. Layers different roles. plot starts specification data set plotted…","code":"library(ggplot2)"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"aesthetics-geometries-box-plot","dir":"Articles","previous_headings":"US CDC Behavioral Risk Factor Surveillance System survey data > Visual exploration","what":"Aesthetics & geometries: box plot","title":"Day 2: Data Management, Visualization, and Analysis","text":"…adds ‘aesthetics’ (columns used X Y axes, color points, etc) …finally one ‘geometries’ (‘geom’) describe geometric relationship x y aesthetics. One geom geom_boxplot(), draws box--whiskers plot.  bar figure median weight, box represents upper lower quartile data, whiskers extend 1.5 times inter-quartile range. Points outside whiskers represent potential outliers. figure shows difference Female Male weights, well skew weight distribution Female Male respondents.","code":"ggplot(brfss_2010) ggplot(brfss_2010) +     aes(x = Sex, y = Weight) ggplot(brfss_2010) +     aes(x = Sex, y = Weight) +     geom_boxplot() #> Warning: Removed 395 rows containing non-finite values #> (`stat_boxplot()`)."},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"scatter-plots","dir":"Articles","previous_headings":"US CDC Behavioral Risk Factor Surveillance System survey data > Visual exploration","what":"Scatter plots","title":"Day 2: Data Management, Visualization, and Analysis","text":"Presumably taller people heavier shorter people. Replace ‘Sex’ ‘Height’ aes(), replace geom_boxplot() geom_point() generate scatter plot showing relationship  Yes looks like relationship. Add geom_smooth(method = \"lm\") fit smoothed relationship points; method = \"lm\" indicates smoothed line linear regression.  relationship height weight likely depends sex. Add color = Sex aes() argument, geom (points smoothed line) colored Sex.  lines cover range values sex; relationship height weight appears slightly steeper males females. relationship height weight males changed 1990 2010? Change dataset brfss_male, color Year, add title plot know little bit relationship. Also, explore data transformation using square root (function sqrt()) weight  figure suggests 2010 males heavier 1990 males heights, hints relationship weight height steeper 2010; formal statistical analysis required confidence.","code":"ggplot(brfss_2010) +     aes(x = Height, y = Weight) +     geom_point() #> Warning: Removed 450 rows containing missing values (`geom_point()`). ggplot(brfss_2010) +     aes(x = Height, y = Weight) +     geom_point() +     geom_smooth(method = \"lm\") #> `geom_smooth()` using formula = 'y ~ x' #> Warning: Removed 450 rows containing non-finite values #> (`stat_smooth()`). #> Warning: Removed 450 rows containing missing values (`geom_point()`). ggplot(brfss_2010) +     aes(x = Height, y = Weight, color = Sex) +     geom_point() +     geom_smooth(method = \"lm\") #> `geom_smooth()` using formula = 'y ~ x' #> Warning: Removed 450 rows containing non-finite values #> (`stat_smooth()`). #> Warning: Removed 450 rows containing missing values (`geom_point()`). ggplot(brfss_male) +     aes(x = Height, y = sqrt(Weight), color = Year) +     geom_point() +     geom_smooth(method = \"lm\") +     labs(title = \"BRFSS Male Subset\") #> `geom_smooth()` using formula = 'y ~ x' #> Warning: Removed 104 rows containing non-finite values #> (`stat_smooth()`). #> Warning: Removed 104 rows containing missing values (`geom_point()`)."},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"statistical-analysis","dir":"Articles","previous_headings":"US CDC Behavioral Risk Factor Surveillance System survey data","what":"Statistical analysis","title":"Day 2: Data Management, Visualization, and Analysis","text":"section illustrates basic statistical tests; interesting sit statistician discuss subtleties correct analysis.","code":""},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"difference-between-groups","dir":"Articles","previous_headings":"US CDC Behavioral Risk Factor Surveillance System survey data > Statistical analysis","what":"Difference between groups","title":"Day 2: Data Management, Visualization, and Analysis","text":"partial summary brfss_2010 data subset statistical support small difference average ages Female Male respondents? Use t.test() compare two groups. studying help page ?t.test, use ‘formula’ notation test differences Age function Sex, Age ~ Sex, using subset brfss_2010 data source. summary reports (bottom) mean ages Male Female respondents consistent calculations, know made kind serious blunder formulating test. t-statistic 2.4497162, P-value 0.0143188 significant. differences Male Weight 1990 2010? Conversation statistician might make us concerned whether assumptions t-test fully satisfied, e.g., data supposed normally distributed, saw box plots weights skewed. try transform data (formal approaches assess appropriateness data transformations available), e.g., using square root (sqrt()) Weight might use statistic like Wilcoxon test makes fewer assumptions underlying statistical distribution. Regardless details analysis, difference Male Weight 1990 2010 highly significant.","code":"brfss_2010 |>     group_by(Sex) |>     summarize(         n = n(),         ave_age = mean(Age, na.rm = TRUE),         ave_wt = mean(Weight, na.rm = TRUE),         ave_ht = mean(Height, na.rm = TRUE)     ) #> # A tibble: 2 × 5 #>   Sex        n ave_age ave_wt ave_ht #>   <fct>  <int>   <dbl>  <dbl>  <dbl> #> 1 Female  6321    57.1   73.0   163. #> 2 Male    3679    56.2   88.8   178. t.test(Age ~ Sex, brfss_2010) #>  #>  Welch Two Sample t-test #>  #> data:  Age by Sex #> t = 2.4497, df = 7768.7, p-value = 0.01432 #> alternative hypothesis: true difference in means between group Female and group Male is not equal to 0 #> 95 percent confidence interval: #>  0.1674909 1.5091167 #> sample estimates: #> mean in group Female   mean in group Male  #>             57.08824             56.24993 t.test(Weight ~ Year, brfss_male) #>  #>  Welch Two Sample t-test #>  #> data:  Weight by Year #> t = -20.751, df = 6549.4, p-value < 2.2e-16 #> alternative hypothesis: true difference in means between group 1990 and group 2010 is not equal to 0 #> 95 percent confidence interval: #>  -8.390845 -6.942327 #> sample estimates: #> mean in group 1990 mean in group 2010  #>           81.17999           88.84657 t.test(sqrt(Weight) ~ Year, brfss_male) #>  #>  Welch Two Sample t-test #>  #> data:  sqrt(Weight) by Year #> t = -20.581, df = 6781.3, p-value < 2.2e-16 #> alternative hypothesis: true difference in means between group 1990 and group 2010 is not equal to 0 #> 95 percent confidence interval: #>  -0.4359662 -0.3601384 #> sample estimates: #> mean in group 1990 mean in group 2010  #>           8.980087           9.378139 wilcox.test(Weight ~ Year, brfss_male) #>  #>  Wilcoxon rank sum test with continuity correction #>  #> data:  Weight by Year #> W = 5754766, p-value < 2.2e-16 #> alternative hypothesis: true location shift is not equal to 0"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"linear-regression","dir":"Articles","previous_headings":"US CDC Behavioral Risk Factor Surveillance System survey data > Statistical analysis","what":"Linear regression","title":"Day 2: Data Management, Visualization, and Analysis","text":"‘BRFSS Male Subset’ figure shows linear relations square root Weight Height year.  calculate regression, assess significance? focus Male 2010 data. answer fit linear regression data. R, done fitting linear model (lm()) summarizing result. ANOVA table shows relationship highly significant. ‘Adjusted R-squared’ value indicates 17% variation Weight accounted Height. estimated coefficient associated Height slope line, indicating square root Weight increases 0.0522187 every increase Height 1 cm. aside, one might hope plot(fit) plot regression line. Actually, creates series diagnostic plots help us assess appropriateness choice linear model describing data. advanced analysis using R test, e.g., differences intercept slope regression 1990 versus 2010 straight-forward implement, require sophisticated statistical understanding.","code":"ggplot(brfss_male) +     aes(x = Height, y = sqrt(Weight), color = Year) +     geom_point() +     geom_smooth(method = \"lm\") +     labs(title = \"BRFSS Male Subset\") #> `geom_smooth()` using formula = 'y ~ x' #> Warning: Removed 104 rows containing non-finite values #> (`stat_smooth()`). #> Warning: Removed 104 rows containing missing values (`geom_point()`). brfss_male_2010 <-     brfss_male |>     filter(Year == \"2010\") ## fit the linear model fit <- lm(sqrt(Weight) ~ Height, brfss_male_2010)  ## summarize the fit, including a statistical assessment of the fit summary(fit) #>  #> Call: #> lm(formula = sqrt(Weight) ~ Height, data = brfss_male_2010) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -3.0500 -0.5976 -0.1014  0.4625  6.8011  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept) 0.083901   0.341398   0.246    0.806     #> Height      0.052219   0.001916  27.253   <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 0.8629 on 3617 degrees of freedom #>   (60 observations deleted due to missingness) #> Multiple R-squared:  0.1704, Adjusted R-squared:  0.1701  #> F-statistic: 742.7 on 1 and 3617 DF,  p-value: < 2.2e-16"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"acute-lymphocytic-leukemia","dir":"Articles","previous_headings":"","what":"Acute Lymphocytic Leukemia","title":"Day 2: Data Management, Visualization, and Analysis","text":"data set old microarray experiment investigating acute lymphocytic leukemia () (PMID 14684422, 16243790; data extracted Bioconductor package). focus phenotypes 128 patients. 1 cod Patient ID 2 diagnosis Date diagnosis 3 sex Gender patient 4 age Age patient entry 5 BT patient B-cell T-cell 6 remission Complete remission(CR), refractory(REF) NA. Derived CR 7 CR Original remisson data 8 date.cr Date complete remission achieved 9 t(4;11) patient t(4;11) translocation. Derived citog 10 t(9;22) patient t(9;22) translocation. Derived citog 11 cyto.normal cytogenetic test normal? Derived citog 12 citog original citogenetics data, deletions t(4;11), t(9;22) sta… 13 mol.biol molecular biology 14 fusion protein p190, p210 p190/210 bcr/able 15 mdr multi-drug resistant 16 kinet ploidy: either diploid hyperd. 17 ccr Continuous complete remission? Derived f.u 18 relapse Relapse? Derived f.u 19 transplant patient receive bone marrow transplant? Derived fro… 20 f.u follow data available 21 date last seen date patient last seen","code":""},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"data-input-1","dir":"Articles","previous_headings":"Acute Lymphocytic Leukemia","what":"Data input","title":"Day 2: Data Management, Visualization, and Analysis","text":"‘csv’ file?","code":"library(readr) library(dplyr) all_file <- file.choose() all <- read_csv(all_file) glimpse(all) #> Rows: 128 #> Columns: 21 #> $ cod              <chr> \"1005\", \"1010\", \"3002\", \"4006\", \"4007\", \"4008\", \"4010… #> $ diagnosis        <chr> \"5/21/1997\", \"3/29/2000\", \"6/24/1998\", \"7/17/1997\", \"… #> $ sex              <chr> \"M\", \"M\", \"F\", \"M\", \"M\", \"M\", \"F\", \"M\", \"M\", \"M\", \"M\"… #> $ age              <dbl> 53, 19, 52, 38, 57, 17, 18, 16, 15, 40, 33, 55, 5, 18… #> $ BT               <chr> \"B2\", \"B2\", \"B4\", \"B1\", \"B2\", \"B1\", \"B1\", \"B1\", \"B2\",… #> $ remission        <chr> \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",… #> $ CR               <chr> \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",… #> $ date.cr          <chr> \"8/6/1997\", \"6/27/2000\", \"8/17/1998\", \"9/8/1997\", \"9/… #> $ `t(4;11)`        <lgl> FALSE, FALSE, NA, TRUE, FALSE, FALSE, FALSE, FALSE, F… #> $ `t(9;22)`        <lgl> TRUE, FALSE, NA, FALSE, FALSE, FALSE, FALSE, FALSE, F… #> $ cyto.normal      <lgl> FALSE, FALSE, NA, FALSE, FALSE, FALSE, FALSE, FALSE, … #> $ citog            <chr> \"t(9;22)\", \"simple alt.\", NA, \"t(4;11)\", \"del(6q)\", \"… #> $ mol.biol         <chr> \"BCR/ABL\", \"NEG\", \"BCR/ABL\", \"ALL1/AF4\", \"NEG\", \"NEG\"… #> $ `fusion protein` <chr> \"p210\", NA, \"p190\", NA, NA, NA, NA, NA, NA, \"p190\", \"… #> $ mdr              <chr> \"NEG\", \"POS\", \"NEG\", \"NEG\", \"NEG\", \"NEG\", \"POS\", \"NEG… #> $ kinet            <chr> \"dyploid\", \"dyploid\", \"dyploid\", \"dyploid\", \"dyploid\"… #> $ ccr              <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALS… #> $ relapse          <lgl> FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE… #> $ transplant       <lgl> TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE… #> $ f.u              <chr> \"BMT / DEATH IN CR\", \"REL\", \"REL\", \"REL\", \"REL\", \"REL… #> $ `date last seen` <chr> NA, \"8/28/2000\", \"10/15/1999\", \"1/23/1998\", \"11/4/199…"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"examples","dir":"Articles","previous_headings":"Acute Lymphocytic Leukemia","what":"Examples","title":"Day 2: Data Management, Visualization, and Analysis","text":"Data management often involves several steps. Chain steps together using pipe, |>. result left-hand side pipe becomes first argument function right-hand side. ‘Tidy’ functions can usually piped together. Use filter() keep rows NA, count mol.biol subset data. Many ‘tidy’ functions can take one argument, e.g., filter count sex mol.biol… following illustrates pivot_wider, taking names new columns mol.biol column, values n (count) column. pivoted table often useful displaying results, useful subsequent computation. Use mutate() update add column, e.g., BT column classifies sample B-cell T-cell Perhaps interested less-complete characterization, e.g., sample B-cell, T-cell, pooling subtypes B1, B2, etc. ’ll use two new functions ‘base’ R startsWith() takes vector first input argument, prefix string second argument. startsWith() returns TRUE value vector matches prefix, FALSE otherwise. ifelse() takes logical vector ’s first argument, value return ifan elemment logical vector TRUE second argument, similarly thrid argument. one line, Use tidy function mutate() create new column BorT New tibbles can created manipulating existing tibbles, e.g., creating all_subset tibble containing samples whose sex known, BCR/ABL NEG; also contains columns.","code":"count(all, sex) #> # A tibble: 3 × 2 #>   sex       n #>   <chr> <int> #> 1 F        42 #> 2 M        83 #> 3 NA        3 all |>     count(sex) #> # A tibble: 3 × 2 #>   sex       n #>   <chr> <int> #> 1 F        42 #> 2 M        83 #> 3 NA        3 all |>     filter(!is.na(sex)) |>     count(mol.biol) #> # A tibble: 6 × 2 #>   mol.biol     n #>   <chr>    <int> #> 1 ALL1/AF4    10 #> 2 BCR/ABL     37 #> 3 E2A/PBX1     4 #> 4 NEG         72 #> 5 NUP-98       1 #> 6 p15/p16      1 all |>     filter(         !is.na(sex),         mol.biol %in% c(\"BCR/ABL\", \"NEG\")     ) |>     count(sex, mol.biol) #> # A tibble: 4 × 3 #>   sex   mol.biol     n #>   <chr> <chr>    <int> #> 1 F     BCR/ABL     16 #> 2 F     NEG         19 #> 3 M     BCR/ABL     21 #> 4 M     NEG         53 all |>     filter(         !is.na(sex),         mol.biol %in% c(\"BCR/ABL\", \"NEG\")     ) |>     count(sex, mol.biol) |>     tidyr::pivot_wider(names_from = \"mol.biol\", values_from = \"n\") #> # A tibble: 2 × 3 #>   sex   `BCR/ABL`   NEG #>   <chr>     <int> <int> #> 1 F            16    19 #> 2 M            21    53 all |>     count(BT) #> # A tibble: 10 × 2 #>    BT        n #>    <chr> <int> #>  1 B         5 #>  2 B1       19 #>  3 B2       36 #>  4 B3       23 #>  5 B4       12 #>  6 T         5 #>  7 T1        1 #>  8 T2       15 #>  9 T3       10 #> 10 T4        2 x <- c(\"B\", \"B1\", \"T\") y <- startsWith(x, \"B\") y #> [1]  TRUE  TRUE FALSE ifelse(y, \"B\", \"T\") #> [1] \"B\" \"B\" \"T\" ifelse(startsWith(x, \"B\"), \"B\", \"T\") #> [1] \"B\" \"B\" \"T\" all |>     mutate(BorT = ifelse(startsWith(BT, \"B\"), \"B\", \"T\")) |>     count(BT, BorT) #> # A tibble: 10 × 3 #>    BT    BorT      n #>    <chr> <chr> <int> #>  1 B     B         5 #>  2 B1    B        19 #>  3 B2    B        36 #>  4 B3    B        23 #>  5 B4    B        12 #>  6 T     T         5 #>  7 T1    T         1 #>  8 T2    T        15 #>  9 T3    T        10 #> 10 T4    T         2 all_subset <-     ## start with the 'all' tibble...     all |>     ## filter to rows whose 'sex' and 'age' is known, and with 'mol.biol' as     ## BCR/ABL or NEG     filter(         !is.na(sex),         !is.na(age),         mol.biol %in% c(\"BCR/ABL\", \"NEG\")     ) |>     ## add a column 'BorT' that simplifies B- or T-cell classification     mutate(         BorT = ifelse(startsWith(BT, \"B\"), \"B\", \"T\")     ) |>     ## select a subset of columns for future analysis     select(         cod, sex, age, BorT, mol.biol     )  all_subset #> # A tibble: 107 × 5 #>    cod   sex     age BorT  mol.biol #>    <chr> <chr> <dbl> <chr> <chr>    #>  1 1005  M        53 B     BCR/ABL  #>  2 1010  M        19 B     NEG      #>  3 3002  F        52 B     BCR/ABL  #>  4 4007  M        57 B     NEG      #>  5 4008  M        17 B     NEG      #>  6 4010  F        18 B     NEG      #>  7 4016  M        16 B     NEG      #>  8 6002  M        15 B     NEG      #>  9 8001  M        40 B     BCR/ABL  #> 10 8011  M        33 B     BCR/ABL  #> # ℹ 97 more rows"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"statistical-analysis-1","dir":"Articles","previous_headings":"","what":"Statistical analysis","title":"Day 2: Data Management, Visualization, and Analysis","text":"Descriptive statistics (count, mean, variance, etc.) can calculated using summarize(). Summarizing groups often important easily accomplished using group_by().","code":"all_subset |>     summarize(n = n(), ave_age = mean(age)) #> # A tibble: 1 × 2 #>       n ave_age #>   <int>   <dbl> #> 1   107    32.2 all_subset |>     group_by(sex) |>     summarize(n = n(), ave_age = mean(age)) #> # A tibble: 2 × 3 #>   sex       n ave_age #>   <chr> <int>   <dbl> #> 1 F        35    34.8 #> 2 M        72    30.9"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"classical-statistics-base-r","dir":"Articles","previous_headings":"Statistical analysis","what":"Classical statistics (base R)","title":"Day 2: Data Management, Visualization, and Analysis","text":"t-test Chi-squared test linear regression","code":"t.test(age ~ sex, all_subset) #>  #>  Welch Two Sample t-test #>  #> data:  age by sex #> t = 1.3901, df = 66.316, p-value = 0.1691 #> alternative hypothesis: true difference in means between group F and group M is not equal to 0 #> 95 percent confidence interval: #>  -1.687236  9.424537 #> sample estimates: #> mean in group F mean in group M  #>        34.77143        30.90278 all_subset |>     count(BorT, sex) |>     tidyr::pivot_wider(names_from = \"BorT\", values_from = \"n\") #> # A tibble: 2 × 3 #>   sex       B     T #>   <chr> <int> <int> #> 1 F        28     7 #> 2 M        48    24 with(all_subset, chisq.test(sex, BorT)) #>  #>  Pearson's Chi-squared test with Yates' continuity correction #>  #> data:  sex and BorT #> X-squared = 1.4383, df = 1, p-value = 0.2304"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"visualization","dir":"Articles","previous_headings":"","what":"Visualization","title":"Day 2: Data Management, Visualization, and Analysis","text":"Box plot  Scatter plot Linear regression","code":"library(ggplot2) ggplot(all_subset) +     aes(x = sex, y = age) +     geom_boxplot() +     geom_jitter(width = .25)"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Day 2: Data Management, Visualization, and Analysis","text":"reproducibility, record software versions used create document","code":"sessionInfo() #> R version 4.3.2 (2023-10-31) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.3 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] readr_2.1.5       ggplot2_3.4.4     dplyr_1.1.4       RPG520_0.0.0.9001 #>  #> loaded via a namespace (and not attached): #>  [1] sass_0.4.8        utf8_1.2.4        generics_0.1.3    tidyr_1.3.1       #>  [5] lattice_0.21-9    stringi_1.8.3     hms_1.1.3         digest_0.6.34     #>  [9] magrittr_2.0.3    evaluate_0.23     grid_4.3.2        fastmap_1.1.1     #> [13] Matrix_1.6-1.1    jsonlite_1.8.8    mgcv_1.9-0        purrr_1.0.2       #> [17] fansi_1.0.6       scales_1.3.0      textshaping_0.3.7 jquerylib_0.1.4   #> [21] cli_3.6.2         rlang_1.1.3       crayon_1.5.2      splines_4.3.2     #> [25] munsell_0.5.0     bit64_4.0.5       withr_3.0.0       cachem_1.0.8      #> [29] yaml_2.3.8        tools_4.3.2       parallel_4.3.2    tzdb_0.4.0        #> [33] memoise_2.0.1     colorspace_2.1-0  vctrs_0.6.5       R6_2.5.1          #> [37] lifecycle_1.0.4   stringr_1.5.1     fs_1.6.3          bit_4.0.5         #> [41] vroom_1.6.5       ragg_1.2.7        pkgconfig_2.0.3   desc_1.4.3        #> [45] pkgdown_2.0.7     pillar_1.9.0      bslib_0.6.1       gtable_0.3.4      #> [49] glue_1.7.0        systemfonts_1.0.5 highr_0.10        xfun_0.41         #> [53] tibble_3.2.1      tidyselect_1.2.0  knitr_1.45        farver_2.1.1      #> [57] nlme_3.1-163      htmltools_0.5.7   labeling_0.4.3    rmarkdown_2.25    #> [61] compiler_4.3.2"},{"path":[]},{"path":[]},{"path":[]},{"path":"https://mtmorgan.github.io/RPG520/articles/day_3.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Day 3: High-throughput Genomic Analysis","text":"reproducibility, record software versions used create document","code":"sessionInfo() #> R version 4.3.2 (2023-10-31) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.3 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] cellxgenedp_1.6.1 dplyr_1.1.4       RPG520_0.0.0.9001 #>  #> loaded via a namespace (and not attached): #>  [1] sass_0.4.8        utf8_1.2.4        generics_0.1.3    stringi_1.8.3     #>  [5] digest_0.6.34     magrittr_2.0.3    evaluate_0.23     fastmap_1.1.1     #>  [9] jsonlite_1.8.8    promises_1.2.1    httr_1.4.7        purrr_1.0.2       #> [13] fansi_1.0.6       textshaping_0.3.7 jquerylib_0.1.4   cli_3.6.2         #> [17] shiny_1.8.0       rlang_1.1.3       ellipsis_0.3.2    cachem_1.0.8      #> [21] yaml_2.3.8        tools_4.3.2       memoise_2.0.1     httpuv_1.6.14     #> [25] DT_0.31           curl_5.2.0        vctrs_0.6.5       rjsoncons_1.2.0   #> [29] R6_2.5.1          mime_0.12         lifecycle_1.0.4   stringr_1.5.1     #> [33] fs_1.6.3          htmlwidgets_1.6.4 ragg_1.2.7        pkgconfig_2.0.3   #> [37] desc_1.4.3        pkgdown_2.0.7     pillar_1.9.0      bslib_0.6.1       #> [41] later_1.3.2       glue_1.7.0        Rcpp_1.0.12       systemfonts_1.0.5 #> [45] xfun_0.41         tibble_3.2.1      tidyselect_1.2.0  knitr_1.45        #> [49] xtable_1.8-4      htmltools_0.5.7   rmarkdown_2.25    compiler_4.3.2"},{"path":[]},{"path":"https://mtmorgan.github.io/RPG520/articles/z_appendix.html","id":"r","dir":"Articles","previous_headings":"Installation","what":"R","title":"Appendix","text":"Install R operating system Comprehensive R Archive Network CRAN. box top page links Linux, macOS, Windows. Windows, see link install R first time. link download installer can double-clicked. Install regular user, system administrator. macOS, use ‘R-4.3.2-arm64.pkg’ installer newer (M1 / M2 macOS) ‘R-4.3.2-x86_64.pkg’ Intel macs. Linux systems can course complicated; follow links operating system.","code":""},{"path":"https://mtmorgan.github.io/RPG520/articles/z_appendix.html","id":"rstudio","dir":"Articles","previous_headings":"Installation","what":"RStudio","title":"Appendix","text":"possible use R without using RStudio (usually use R, instance), many people use open-source version RStudio. Download open-source version RStudio Desktop Posit, company produces RStudio.","code":""},{"path":"https://mtmorgan.github.io/RPG520/articles/z_appendix.html","id":"packages","dir":"Articles","previous_headings":"","what":"Packages","title":"Appendix","text":"installing R laptop purposes course, ’ll need install packages use. R CCR many packages pre-installed. 20,000 packages CRAN Bioconductor, point need package installed. Follow general approach. Note packages need installed ; installed, can used separate R sessions using library() pkg::function() notation.","code":""},{"path":"https://mtmorgan.github.io/RPG520/articles/z_appendix.html","id":"cran-package-installation","dir":"Articles","previous_headings":"Packages","what":"CRAN package installation","title":"Appendix","text":"Start creating vector packages install. workshop, used following packages. Use setdiff() (remove vector first argument elements occur vector second argument) packages currently installed remain. Finally, using function install.packages() install required packages central CRAN repository.","code":"pkgs <- c(\"readr\", \"dplyr\", \"tidyr\", \"ggplot2\") pkgs <- setdiff(pkgs, rownames(installed.packages())) install.packages(pkgs, repos = \"https://CRAN.R-project.org\")"},{"path":"https://mtmorgan.github.io/RPG520/articles/z_appendix.html","id":"bioconductor-packages","dir":"Articles","previous_headings":"Packages","what":"Bioconductor packages","title":"Appendix","text":"Bioconductor packages require slightly different installation procedure. Make sure [BiocManager][] package installed CRAN install Bioconductor (CRAN) packages needed","code":"pkgs <- \"BiocManager\" pkgs <- setdiff(pkgs, rownames(installed.packages())) install.packages(pkgs, repos = \"https://CRAN.R-project.org\") pkgs <- c(     \"cellxgenedp\", # Bioconductor package     \"Seurat\"       # CRAN package ) pkgs <- setdiff(pkgs, rownames(installed.packages())) BiocManager::install(pkgs)"},{"path":"https://mtmorgan.github.io/RPG520/articles/z_appendix.html","id":"updating-packages","dir":"Articles","previous_headings":"Packages","what":"Updating packages","title":"Appendix","text":"install.packages() BiocManager::install() report packages --date newer version available. Usually good idea using recent version available. two situations might wish continue using older packages. tight deadline (e.g., thesis defense, paper submission). Updating packages can sometimes introduce changes break existing code, can time consuming track . Reproducibility. Packages sometimes introduce changes result (hopefully slightly) different outcomes, perhaps packages adopts newer algorithm. might desireable, e.g., paper submitted reviewer says ‘excellent expect …’ requires minor addition orginal analysis, try reproduce original analysis longer possible changes underlying software. number strategies taking ‘snapshot’ software versions used particular analysis (e.g.,, renv package), become serious using R valuable explore resources need reproduce .","code":""},{"path":"https://mtmorgan.github.io/RPG520/articles/z_appendix.html","id":"faq-binary-or-source-packages","dir":"Articles","previous_headings":"Packages","what":"FAQ: binary or source packages?","title":"Appendix","text":"Windows macOS, one might sometimes see message indicates ‘binary’ package available, ‘source’ package recent. Almost always best response stay ‘binary’ package – -recent ‘source’ package likely made available short time frame (within week), indicates package difficult install even wizards CRAN – mere mortals like become proficient install Windows macOS packages source.","code":""},{"path":"https://mtmorgan.github.io/RPG520/articles/z_appendix.html","id":"data-used-in-this-workshop","dir":"Articles","previous_headings":"","what":"Data used in this workshop","title":"Appendix","text":"Datasets used workshop available CCR. can also accessed internet. URL dataset base_url pasted file name used document. Thus dataset available can read directly R downloaded disk easy re-use","code":"base_url <-     \"https://raw.githubusercontent.com/mtmorgan/RPG520/main/inst/extdata/\" ALL_url <- paste0(base_url, \"ALL.csv\") all <- readr::read_csv(ALL_url) download.file(ALL_url, \"ALL.csv\")"},{"path":"https://mtmorgan.github.io/RPG520/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martin Morgan. Author, maintainer.","code":""},{"path":"https://mtmorgan.github.io/RPG520/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Morgan M (2024). RPG520: Course Material Principles Computational Oncology. R package version 0.0.0.9001, https://mtmorgan.github.io/RPG520/.","code":"@Manual{,   title = {RPG520: Course Material for Principles of Computational Oncology},   author = {Martin Morgan},   year = {2024},   note = {R package version 0.0.0.9001},   url = {https://mtmorgan.github.io/RPG520/}, }"},{"path":"https://mtmorgan.github.io/RPG520/index.html","id":"rpg520-course-material-for-principles-of-computational-oncology","dir":"","previous_headings":"","what":"Course Material for Principles of Computational Oncology","title":"Course Material for Principles of Computational Oncology","text":"repository provides course material workshop offered part Roswell Park Comprehensive Cancer Center 2024 graduate course “Principles Computational Oncology”.","code":""},{"path":"https://mtmorgan.github.io/RPG520/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Course Material for Principles of Computational Oncology","text":"Workshop participants need install anything. Others may install package using following commands.","code":"## install.packages(\"devtools\") devtools::install_github(\"mtmorgan/RPG520\")"},{"path":"https://mtmorgan.github.io/RPG520/index.html","id":"content","dir":"","previous_headings":"","what":"Content","title":"Course Material for Principles of Computational Oncology","text":"Day 1 introduces CCR ‘OnDemand’ compute environment, basics R. Day 2 provides two cases studies illustrating use R data management, visualization, statistical analysis. Day 3 illustrates additional cases studies computational oncology perspective appendix provides instructions installing R RStudio, managing packages, retrieving data sets used workshop.","code":""}]
