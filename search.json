[{"path":"https://mtmorgan.github.io/RPG520/articles/day_1.html","id":"connecting-to-the-ccr","dir":"Articles","previous_headings":"","what":"Connecting to the CCR","title":"Day 1: Introduction to the CCR, and to R","text":"’ll use UB CCR computer cluster workshop. (hopefully) simplifies initial steps ‘getting going’, introducing main resource available desktop sufficient. See appendix like install R RStudio laptop. Visit sign , using UB id, Roswell Park UB network: https://ondemand.ccr.buffalo.edu  next screen ask UB password, two-factor authentication.","code":""},{"path":"https://mtmorgan.github.io/RPG520/articles/day_1.html","id":"from-ccr-to-rstudio","dir":"Articles","previous_headings":"Connecting to the CCR","what":"From CCR to RStudio","title":"Day 1: Introduction to the CCR, and to R","text":"Use browser navigate https://ondemand.ccr.buffalo.edu/. Look “GUIs” section, choose ‘RStudio Server’.  Provide details next screen, click ‘Launch’  ‘Slurm account’: choose user name. ‘Partition’: choose ‘rpci’. ‘Quality Service (QOS)’: choose ‘rpci’ ‘Number hours requested’: choose 2; ’ll unceremoniously kicked number hours, save work--progress. Clicking ‘Launch’ button puts request compute resources queue. wait. long. Hopefully.  Eventually CCR finds resources job, queue status changes ‘Running’, link ‘Connect RStudio Server’. Click link get session RStudio.","code":""},{"path":"https://mtmorgan.github.io/RPG520/articles/day_1.html","id":"rstudio","dir":"Articles","previous_headings":"Connecting to the CCR","what":"RStudio","title":"Day 1: Introduction to the CCR, and to R","text":"’ll use RStudio extensively. get going, copy paste following line ‘Console’  Finally, tell RStudio changes made previous command navigating lower-right panel, choosing ‘gear’ widget’, selecting ‘Go Working Directory’, following figure  OK, ready go!","code":"source('/projects/rpci/rplect/Rpg520/Rsetdirs.R')"},{"path":[]},{"path":"https://mtmorgan.github.io/RPG520/articles/day_1.html","id":"essential-r","dir":"Articles","previous_headings":"Introduction to R","what":"Essential R","title":"Day 1: Introduction to the CCR, and to R","text":"simple calculator ‘Vectors’ building blocks Variables, missing values ‘factors’ Data structures coordinate related vectors – data.frame Key operations data.frame df[1:3, c(\"gender\", \"age\")] – subset rows columns df[[\"age\"]], df$age – select columns Functions   ‘Vectorized’ operations, e.g., element-wise addition without explicit ‘’ loop. following creates vector y element-wise addition 100 elements vector x 100 random normal deviates. x y related, place columns data.frame(). 100 rows data.frame(), head() shows first 6 rows. statistical relationship y x, specifically, y equal x plus random noise. Visualize using plot().  looks like linear relationship; can demonstrate statistically? Use lm() function fit linear model relationship y x: adding regression line scatter plot? plotting points, adding abline() add straight line implied linear model fit.","code":"1 + 1 ## [1] 2 c(1, 2, 3) ## [1] 1 2 3 c(\"January\", \"February\", \"March\") ## [1] \"January\"  \"February\" \"March\" c(TRUE, FALSE) ## [1]  TRUE FALSE age <- c(27, NA, 32, 29) gender <- factor(     c(\"Female\", \"Male\", \"Non-binary\", NA),     levels = c(\"Female\", \"Male\", \"Non-binary\") ) df <- data.frame(     age = c(27, NA, 32, 29),     gender = gender ) df ##   age     gender ## 1  27     Female ## 2  NA       Male ## 3  32 Non-binary ## 4  29       <NA> rnorm(5)        # 5 random normal deviates ## [1]  0.04506121  0.96779944  0.94572469  0.54821876 -0.18464469 x <- rnorm(100) # 100 random normal deviates hist(x)         # histogram, approximately normal plot(density(x)) # a little more sophisticated? y <- x + rnorm(100) df <- data.frame(x, y) nrow(df) ## [1] 100 head(df) ##            x            y ## 1 -0.5751798 -0.009330476 ## 2 -0.7719034  0.116283656 ## 3  0.7406275  0.677282256 ## 4  1.8831243  0.550604056 ## 5 -1.3446127 -1.101733465 ## 6  1.8609596  1.746754990 plot(y ~ x, df) fit <- lm(y ~ x, df) fit           # an R 'object' containing information about the ##  ## Call: ## lm(formula = y ~ x, data = df) ##  ## Coefficients: ## (Intercept)            x   ##      0.1039       0.8173               # regression of y on x summary(fit)  # statistical summary of linear regression ##  ## Call: ## lm(formula = y ~ x, data = df) ##  ## Residuals: ##      Min       1Q   Median       3Q      Max  ## -2.21540 -0.60395 -0.03588  0.69877  2.46708  ##  ## Coefficients: ##             Estimate Std. Error t value Pr(>|t|)     ## (Intercept)  0.10392    0.09821   1.058    0.293     ## x            0.81732    0.08469   9.651 6.93e-16 *** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## Residual standard error: 0.9797 on 98 degrees of freedom ## Multiple R-squared:  0.4873, Adjusted R-squared:  0.4821  ## F-statistic: 93.14 on 1 and 98 DF,  p-value: 6.927e-16 plot(y ~ x, df) abline(lm(y ~ x, df))"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_1.html","id":"a-little-more-advanced","dir":"Articles","previous_headings":"Introduction to R > Essential R","what":"A little more advanced…","title":"Day 1: Introduction to the CCR, and to R","text":"Write functions Iterate, usually lapply() although () available","code":"hello <- function(who) {     paste(\"hello\", who, \"with\", nchar(who), \"letters in your name\") } hello(\"Martin\") ## [1] \"hello Martin with 6 letters in your name\" names <- c(\"Martin\", \"Thomas\") lapply(names, hello) ## [[1]] ## [1] \"hello Martin with 6 letters in your name\" ##  ## [[2]] ## [1] \"hello Thomas with 6 letters in your name\""},{"path":"https://mtmorgan.github.io/RPG520/articles/day_1.html","id":"packages","dir":"Articles","previous_headings":"Introduction to R","what":"Packages","title":"Day 1: Introduction to the CCR, and to R","text":"Packages extend functionality base R. Can part ‘base’ distribution (lm() ‘stats’ package)… … package contributed users Comprehensive R Archive Network (CRAN), Bioconductor repositories. Use install.packages() install CRAN packages First install BiocManager CRAN, use BiocManager::install() install Bioconductor packages. particularly common suite packages ‘tidyverse’. use dplyr contributed CRAN package, load package dplyr ‘tibble’ like ‘data.frame’, user-friendly ggplot2 package often used visualizing data ggplot2 uses ‘grammar graphics’ assemble plot layers","code":"stats::lm(y ~ x) ##  ## Call: ## stats::lm(formula = y ~ x) ##  ## Coefficients: ## (Intercept)            x   ##      0.1039       0.8173 library(dplyr) tbl <- tibble(     x = rnorm(100),     y = x + rnorm(100) )  tbl # e.g., only displays the first 10 rows ## # A tibble: 100 × 2 ##         x       y ##     <dbl>   <dbl> ##  1 -0.804 -2.19   ##  2  0.186 -0.722  ##  3  0.135  0.0186 ##  4  0.336  0.706  ##  5  1.51   1.99   ##  6  0.595  0.364  ##  7  1.07   0.815  ##  8 -0.900 -0.999  ##  9  1.35   1.09   ## 10 -1.79  -0.210  ## # ℹ 90 more rows library(ggplot2) ggplot(tbl) +                    # use 'tbl' as a source of data for the plot     aes(x, y) +                  # use columns 'x' and 'y' for axes     geom_point() +               # add x and y coordinates as points     geom_smooth(method = \"lm\")   # add a regression line, with confidence bands ## `geom_smooth()` using formula = 'y ~ x'"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_1.html","id":"how-to-learn-r","dir":"Articles","previous_headings":"Introduction to R","what":"How to Learn R","title":"Day 1: Introduction to the CCR, and to R","text":"Help Every function help page, e.g., Sections ‘Description’, ‘Usage’, ‘Arguments’ (often defaults), ‘Value’, ‘Examples’ Can quite difficult follow, usually quite helpful. Vignettes Many packages ‘vignettes’ illustrate package can used. Books Hands-Programming R introduces R programming. Basics provides elementary starting point. R Data Science book-length web spanning introductory advanced topics. One authors, Hadley Wickham, author dplyr ggplot2 packages, among others. Web resources Google can great place find general R resource, e.g., ‘survival analysis R’ StackOverflow useful trouble-shooting particular problems – ‘try fit linear model lm(mgp ~ cyl, mtcars) R says …, wrong?’. ChatGPT & friends can also useful, especially asking well-focused questions , e.g., asked ‘explain following R code’ help understand code someone else written. almost always disagreed specific code ChatGPT generates; sometimes simply work (e.g., use package ‘X’, ‘X’ package), dangerous situations code syntactically correct provides wrong answer. Use, extreme care!","code":"?data.frame vignette(package = \"dplyr\") ## Vignettes in package 'dplyr': ## ## colwise                 Column-wise operations (source, html) ## base                    dplyr <-> base R (source, html) ## grouping                Grouped data (source, html) ## dplyr                   Introduction to dplyr (source, html) ## programming             Programming with dplyr (source, html) ## rowwise                 Row-wise operations (source, html) ## two-table               Two-table verbs (source, html) ## in-packages             Using dplyr in packages (source, html) ## window-functions        Window functions (source, html)  vignette(package = \"dplyr\", \"dplyr\")"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_1.html","id":"grading-for-this-week","dir":"Articles","previous_headings":"","what":"Grading for this week","title":"Day 1: Introduction to the CCR, and to R","text":"task week write R script performs data management statistical analysis data set choice – essentially reproducing selected steps work Wednesday. provide (CCR server) file ‘your_name.R’. run file new R session using command source('your_name.R', echo = TRUE). read evaluate R command file. Grading 10, following thresholds 7 / 10 source('your_name.R', echo = TRUE) works without error. 8 / 10 scripts implement extensive analyses, present interesting complicated data. 10 / 10 work goes beyond material cover week, e.g., using ‘Rmarkdown’ present work, performing additional (appropriate) data manipulation steps using dplyr packages, additional visualizations statstical analyses. Note 7 / 10 score obtained copying & pasting (subset ) commands Wednesday’s lab ‘your_name.R’. Please feel free contact speak problems ideas.","code":""},{"path":"https://mtmorgan.github.io/RPG520/articles/day_1.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Day 1: Introduction to the CCR, and to R","text":"reproducibility, record software versions used create document","code":"sessionInfo() ## R version 4.3.2 (2023-10-31) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Ubuntu 22.04.3 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 ##  ## locale: ##  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        ##  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    ##  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           ## [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    ##  ## time zone: UTC ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] ggplot2_3.4.4 dplyr_1.1.4   ##  ## loaded via a namespace (and not attached): ##  [1] Matrix_1.6-1.1    gtable_0.3.4      jsonlite_1.8.8    compiler_4.3.2    ##  [5] highr_0.10        tidyselect_1.2.0  stringr_1.5.1     jquerylib_0.1.4   ##  [9] splines_4.3.2     scales_1.3.0      systemfonts_1.0.5 textshaping_0.3.7 ## [13] yaml_2.3.8        fastmap_1.1.1     lattice_0.21-9    R6_2.5.1          ## [17] labeling_0.4.3    generics_0.1.3    knitr_1.45        tibble_3.2.1      ## [21] desc_1.4.3        munsell_0.5.0     bslib_0.6.1       pillar_1.9.0      ## [25] rlang_1.1.3       utf8_1.2.4        cachem_1.0.8      stringi_1.8.3     ## [29] xfun_0.42         fs_1.6.3          sass_0.4.8        memoise_2.0.1     ## [33] cli_3.6.2         mgcv_1.9-0        withr_3.0.0       pkgdown_2.0.7     ## [37] magrittr_2.0.3    digest_0.6.34     grid_4.3.2        nlme_3.1-163      ## [41] lifecycle_1.0.4   vctrs_0.6.5       evaluate_0.23     glue_1.7.0        ## [45] farver_2.1.1      ragg_1.2.7        colorspace_2.1-0  fansi_1.0.6       ## [49] rmarkdown_2.25    purrr_1.0.2       tools_4.3.2       pkgconfig_2.0.3   ## [53] htmltools_0.5.7"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Day 2: Data Management, Visualization, and Analysis","text":"use two case studies today. studies used illustrate data manipulation statistical analysis tasks one might expect day--day wet- dry-lab work computational oncology. use functions dplyr package manage data. dplyr key package particular approach data management R called ‘tidyverse’. Tidy analysis uses standard data structure (tibble) relatively small number functions provide effective way accomplish many tasks. Start loading dplyr package. Functions ‘tidy’ data management include: filter() – filter data contain specific rows. select() – select subset columns. mutate() – change add columns. Example functions summarize data: count() – simple count entries column. summarize() – e.g., mean() var()iance one columns. group_by() – summarize data group. tidyr packages complement basic functionality tidyr::pivot_wider() – change ‘long’ table ‘wide’ table. See example . use readr package read data disk R. tidyr readr used less commonly, load R session yet. visualization, use ggplot2; details provided . Finally, statistical functions use ‘stats’ package distributed R.","code":"library(dplyr)"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"us-cdc-behavioral-risk-factor-surveillance-system-survey-data","dir":"Articles","previous_headings":"","what":"US CDC Behavioral Risk Factor Surveillance System survey data","title":"Day 2: Data Management, Visualization, and Analysis","text":"use data US Center Disease Control’s Behavioral Risk Factor Surveillance System (BRFSS) annual survey. Check web page little information. using small subset data, including random sample 20000 observations 1990 2010.","code":""},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"data-input","dir":"Articles","previous_headings":"US CDC Behavioral Risk Factor Surveillance System survey data","what":"Data input","title":"Day 2: Data Management, Visualization, and Analysis","text":"Use file.choose() find ‘BRFSS-subset.csv’ file CCR file system. Take peak data using readLines() function read first 3 lines data, cat(\"\\n\") print result terminal file ‘comma-separated value’ file. files can created , instance, using Excel’s ‘Export’ menu. first line consists column headers, separated comma. Subsequent lines represent rows data, comma separating columns. Read entire dataset R command readr::read_csv(). Assign data variable brfss.","code":"brfss_file_path <- file.choose() # look for 'Rpg520/week-04/extdata/BRFSS-subset.csv' readLines(brfss_file_path, 3) |>     cat(sep = \"\\n\") ## \"Age\",\"Weight\",\"Sex\",\"Height\",\"Year\" ## 31,48.9879760010809,\"Female\",157.48,\"1990\" ## 57,81.6466266684681,\"Female\",157.48,\"1990\" brfss <- readr::read_csv(brfss_file_path) ## Rows: 20000 Columns: 5 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr (1): Sex ## dbl (4): Age, Weight, Height, Year ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. brfss ## # A tibble: 20,000 × 5 ##      Age Weight Sex    Height  Year ##    <dbl>  <dbl> <chr>   <dbl> <dbl> ##  1    31   49.0 Female   157.  1990 ##  2    57   81.6 Female   157.  1990 ##  3    43   80.3 Male     178.  1990 ##  4    72   70.3 Male     170.  1990 ##  5    31   49.9 Female   155.  1990 ##  6    58   54.4 Female   155.  1990 ##  7    45   69.9 Male     173.  1990 ##  8    37   68.0 Male     180.  1990 ##  9    33   65.8 Female   170.  1990 ## 10    75   70.8 Female   152.  1990 ## # ℹ 19,990 more rows"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"initial-cleaning","dir":"Articles","previous_headings":"US CDC Behavioral Risk Factor Surveillance System survey data","what":"Initial cleaning","title":"Day 2: Data Management, Visualization, and Analysis","text":"data pretty simple, two small changes make useful. ‘Sex’ ‘Year’ really factor values (can take specific levels, ‘Female’ ‘Male’ ‘Sex’, ‘1990’ ‘2010’ ‘Year’).","code":""},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"mutate","dir":"Articles","previous_headings":"US CDC Behavioral Risk Factor Surveillance System survey data > Initial cleaning","what":"Mutate","title":"Day 2: Data Management, Visualization, and Analysis","text":"factor can created ordinary vector x code like following: Use dplyr mutate() function change ‘Sex’ ‘Year’ factors. looks like ’s working, save updated data set","code":"x <- c(\"Male\", \"Female\", \"Female\", NA) factor(x, levels = c(\"Female\", \"Male\")) ## [1] Male   Female Female <NA>   ## Levels: Female Male  y <- c(2010, 1991, 1990, NA) factor(y, levels = c(\"1990\", \"2010\")) ## [1] 2010 <NA> 1990 <NA> ## Levels: 1990 2010 brfss |>     mutate(         Sex = factor(Sex, levels = c(\"Female\", \"Male\")),         Year = factor(Year, levels = c(\"1990\", \"2010\"))     ) ## # A tibble: 20,000 × 5 ##      Age Weight Sex    Height Year  ##    <dbl>  <dbl> <fct>   <dbl> <fct> ##  1    31   49.0 Female   157. 1990  ##  2    57   81.6 Female   157. 1990  ##  3    43   80.3 Male     178. 1990  ##  4    72   70.3 Male     170. 1990  ##  5    31   49.9 Female   155. 1990  ##  6    58   54.4 Female   155. 1990  ##  7    45   69.9 Male     173. 1990  ##  8    37   68.0 Male     180. 1990  ##  9    33   65.8 Female   170. 1990  ## 10    75   70.8 Female   152. 1990  ## # ℹ 19,990 more rows brfss <-     brfss |>     mutate(         Sex = factor(Sex, levels = c(\"Female\", \"Male\")),         Year = factor(Year, levels = c(\"1990\", \"2010\"))     )"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"data-exploration","dir":"Articles","previous_headings":"US CDC Behavioral Risk Factor Surveillance System survey data","what":"Data exploration","title":"Day 2: Data Management, Visualization, and Analysis","text":"good place start analysis basic data exploration. Perhaps straight-forward thing count number observations year.","code":""},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"count","dir":"Articles","previous_headings":"US CDC Behavioral Risk Factor Surveillance System survey data > Data exploration","what":"Count","title":"Day 2: Data Management, Visualization, and Analysis","text":"data chosen year number individuals. number females males year? determined responses survey, reflecting relative number males females population, least responding survey. number sex year? Use count() two () column names seems like Female respondents 2010 1990. Use tidyr‘s function pivot_wider() (remember look help page ?pivot_wider details function works) pivot ’Sex’ column entries column names.","code":"brfss |>     count(Year) ## # A tibble: 2 × 2 ##   Year      n ##   <fct> <int> ## 1 1990  10000 ## 2 2010  10000 brfss |>     count(Sex) ## # A tibble: 2 × 2 ##   Sex        n ##   <fct>  <int> ## 1 Female 12039 ## 2 Male    7961 brfss |>     count(Sex, Year) ## # A tibble: 4 × 3 ##   Sex    Year      n ##   <fct>  <fct> <int> ## 1 Female 1990   5718 ## 2 Female 2010   6321 ## 3 Male   1990   4282 ## 4 Male   2010   3679 brfss |>     count(Sex, Year) |>     tidyr::pivot_wider(names_from = \"Sex\", values_from = \"n\") ## # A tibble: 2 × 3 ##   Year  Female  Male ##   <fct>  <int> <int> ## 1 1990    5718  4282 ## 2 2010    6321  3679"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"summarize","dir":"Articles","previous_headings":"US CDC Behavioral Risk Factor Surveillance System survey data > Data exploration","what":"Summarize","title":"Day 2: Data Management, Visualization, and Analysis","text":"used tidyr::pivot_wider() instead just pivot_wider(). notation means ’use tidyr package, function package called pivot_wider(). notation avoid conflicts two packages function named pivot_wider(); also additional benefits related managing R’s .GlobalEnv, advanced topic. Use summarize() summaries complicated simple counts Nothing exciting , except perhaps note use metric system Weight (kg) Height (cm). function mean() calculates average corresponding column. na.rm = TRUE tells function remove NA (missing) values calculating mean. kind interesting. Suppose one vector calculated mean surprises. one values x missing? logic used R missing value number, mean anything – ’s unknown value, mean must also unknown! Often like calculate mean removing unknown values, na.rm = TRUE argument ","code":"brfss |>     summarize(         avg_age = mean(Age, na.rm = TRUE),         ave_wt = mean(Weight, na.rm = TRUE),         ave_ht = mean(Height, na.rm = TRUE)     ) ## # A tibble: 1 × 3 ##   avg_age ave_wt ave_ht ##     <dbl>  <dbl>  <dbl> ## 1    51.0   75.4   169. x <- c(1, 3, 5) mean(x) ## [1] 3 x <- c(1, 3, NA) mean(x) ## [1] NA mean(x, na.rm = TRUE) ## [1] 2"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"group","dir":"Articles","previous_headings":"US CDC Behavioral Risk Factor Surveillance System survey data > Data exploration","what":"Group","title":"Day 2: Data Management, Visualization, and Analysis","text":"Back data exploration, might expect average age, weight, height different Female Male respondents, perhaps also years. Use group_by() calculate summaries Sex Year shows interesting aspects data. Males average 15cm taller females; difference average height years. average age Female Male respondents greater 2010 1990. likely reflects changing demographics, ‘baby boom’ cohort ages. Note average Female age changes 10.9 years, whereas average Male age changes 12.3 years; perhaps reflects different life expectancy males females. Also interesting average weight changes, 8.2 kg (18 lbs) Female respondents, 7.6 kg (16.7 lbs) Males. people general become heavier, older people heavier younger people (reasons captured data).","code":"brfss |>     group_by(Sex, Year) |>     summarize(         avg_age = mean(Age, na.rm = TRUE),         ave_wt = mean(Weight, na.rm = TRUE),         ave_ht = mean(Height, na.rm = TRUE)     ) ## `summarise()` has grouped output by 'Sex'. You can override using the `.groups` ## argument. ## # A tibble: 4 × 5 ## # Groups:   Sex [2] ##   Sex    Year  avg_age ave_wt ave_ht ##   <fct>  <fct>   <dbl>  <dbl>  <dbl> ## 1 Female 1990     46.2   64.8   163. ## 2 Female 2010     57.1   73.0   163. ## 3 Male   1990     43.9   81.2   178. ## 4 Male   2010     56.2   88.8   178."},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"filter","dir":"Articles","previous_headings":"US CDC Behavioral Risk Factor Surveillance System survey data > Data exploration","what":"Filter","title":"Day 2: Data Management, Visualization, and Analysis","text":"Use filter() create subset data containing 2010 respondents, another subset containing Male respondents.","code":"brfss_2010 <-     brfss |>     filter(Year == \"2010\")  brfss_male <-     brfss |>     filter(Sex == \"Male\")"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"visual-exploration","dir":"Articles","previous_headings":"US CDC Behavioral Risk Factor Surveillance System survey data","what":"Visual exploration","title":"Day 2: Data Management, Visualization, and Analysis","text":"use ggplot2 package visually explore data. use several functions package, load R session. ggplot2 constructs plots adding layers. Layers different roles. plot starts specification data set plotted…","code":"library(ggplot2)"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"aesthetics-geometries-box-plot-histogram-density-plot","dir":"Articles","previous_headings":"US CDC Behavioral Risk Factor Surveillance System survey data > Visual exploration","what":"Aesthetics & geometries: box plot, histogram, density plot","title":"Day 2: Data Management, Visualization, and Analysis","text":"…adds ‘aesthetics’ (columns used X Y axes, color points, etc) …finally one ‘geometries’ (‘geom’) describe geometric relationship x y aesthetics. One geom geom_boxplot(), draws box--whiskers plot.  bar figure median weight, box represents upper lower quartile data, whiskers extend 1.5 times inter-quartile range. Points outside whiskers represent potential outliers. figure shows difference Female Male weights, well skew weight distribution Female Male respondents. Another way view sort data histogram…  … comparing distributions density plot  subsequent work, note log-transformed Weight reduces extreme values distribution Normal.","code":"ggplot(brfss_2010) ggplot(brfss_2010) +     aes(x = Sex, y = Weight) ggplot(brfss_2010) +     aes(x = Sex, y = Weight) +     geom_boxplot() ## Warning: Removed 395 rows containing non-finite values ## (`stat_boxplot()`). brfss_2010 |> filter(Sex == \"Male\") |>     ggplot() +     aes(x = Weight) +     geom_histogram(col = \"white\") ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 49 rows containing non-finite values (`stat_bin()`). ggplot(brfss_2010) +     aes(x = Weight, color = Sex) +     geom_density() ## Warning: Removed 395 rows containing non-finite values ## (`stat_density()`). ggplot(brfss_2010) +     aes(x = log10(Weight), color = Sex) +     geom_density() ## Warning: Removed 395 rows containing non-finite values ## (`stat_density()`)."},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"scatter-plots","dir":"Articles","previous_headings":"US CDC Behavioral Risk Factor Surveillance System survey data > Visual exploration","what":"Scatter plots","title":"Day 2: Data Management, Visualization, and Analysis","text":"Presumably taller people heavier shorter people. Replace ‘Sex’ ‘Height’ aes(), replace geom_boxplot() geom_point() generate scatter plot showing relationship  Yes looks like relationship. Add geom_smooth(method = \"lm\") fit smoothed relationship points; method = \"lm\" indicates smoothed line linear regression.  relationship height weight likely depends sex. Add color = Sex aes() argument, geom (points smoothed line) colored Sex.  lines cover range values sex; relationship height weight appears slightly steeper males females. relationship height weight males changed 1990 2010? Change dataset brfss_male, color Year, add title plot know little bit relationship. Also, explore data transformation using log weight  figure suggests 2010 males heavier 1990 males heights, hints relationship weight height steeper 2010; formal statistical analysis required confidence.","code":"ggplot(brfss_2010) +     aes(x = Height, y = Weight) +     geom_point() ## Warning: Removed 450 rows containing missing values (`geom_point()`). ggplot(brfss_2010) +     aes(x = Height, y = Weight) +     geom_point() +     geom_smooth(method = \"lm\") ## `geom_smooth()` using formula = 'y ~ x' ## Warning: Removed 450 rows containing non-finite values ## (`stat_smooth()`). ## Warning: Removed 450 rows containing missing values (`geom_point()`). ggplot(brfss_2010) +     aes(x = Height, y = Weight, color = Sex) +     geom_point() +     geom_smooth(method = \"lm\") ## `geom_smooth()` using formula = 'y ~ x' ## Warning: Removed 450 rows containing non-finite values ## (`stat_smooth()`). ## Warning: Removed 450 rows containing missing values (`geom_point()`). ggplot(brfss_male) +     aes(x = Height, y = log10(Weight), color = Year) +     geom_point() +     geom_smooth(method = \"lm\") +     labs(title = \"BRFSS Male Subset\") ## `geom_smooth()` using formula = 'y ~ x' ## Warning: Removed 104 rows containing non-finite values ## (`stat_smooth()`). ## Warning: Removed 104 rows containing missing values (`geom_point()`)."},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"statistical-analysis","dir":"Articles","previous_headings":"US CDC Behavioral Risk Factor Surveillance System survey data","what":"Statistical analysis","title":"Day 2: Data Management, Visualization, and Analysis","text":"section illustrates basic statistical tests; interesting sit statistician discuss subtleties correct analysis.","code":""},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"difference-between-groups","dir":"Articles","previous_headings":"US CDC Behavioral Risk Factor Surveillance System survey data > Statistical analysis","what":"Difference between groups","title":"Day 2: Data Management, Visualization, and Analysis","text":"partial summary brfss_2010 data subset statistical support small difference average ages Female Male respondents? Use t.test() compare two groups. studying help page ?t.test, use ‘formula’ notation test differences Age function Sex, Age ~ Sex, using subset brfss_2010 data source. summary reports (bottom) mean ages Male Female respondents consistent calculations, know made kind serious blunder formulating test. t-statistic 2.4497162, P-value 0.0143188 significant. differences Male Weight 1990 2010? Conversation statistician might make us concerned whether assumptions t-test fully satisfied, e.g., data supposed normally distributed, saw box plots weights skewed. try transform data (formal approaches assess appropriateness data transformations available), e.g., using log Weight might use statistic like Wilcoxon test makes fewer assumptions underlying statistical distribution. Regardless details analysis, difference Male Weight 1990 2010 highly significant.","code":"brfss_2010 |>     group_by(Sex) |>     summarize(         n = n(),         ave_age = mean(Age, na.rm = TRUE),         ave_wt = mean(Weight, na.rm = TRUE),         ave_ht = mean(Height, na.rm = TRUE)     ) ## # A tibble: 2 × 5 ##   Sex        n ave_age ave_wt ave_ht ##   <fct>  <int>   <dbl>  <dbl>  <dbl> ## 1 Female  6321    57.1   73.0   163. ## 2 Male    3679    56.2   88.8   178. t.test(Age ~ Sex, brfss_2010) ##  ##  Welch Two Sample t-test ##  ## data:  Age by Sex ## t = 2.4497, df = 7768.7, p-value = 0.01432 ## alternative hypothesis: true difference in means between group Female and group Male is not equal to 0 ## 95 percent confidence interval: ##  0.1674909 1.5091167 ## sample estimates: ## mean in group Female   mean in group Male  ##             57.08824             56.24993 t.test(Weight ~ Year, brfss_male) ##  ##  Welch Two Sample t-test ##  ## data:  Weight by Year ## t = -20.751, df = 6549.4, p-value < 2.2e-16 ## alternative hypothesis: true difference in means between group 1990 and group 2010 is not equal to 0 ## 95 percent confidence interval: ##  -8.390845 -6.942327 ## sample estimates: ## mean in group 1990 mean in group 2010  ##           81.17999           88.84657 t.test(log10(Weight) ~ Year, brfss_male) ##  ##  Welch Two Sample t-test ##  ## data:  log10(Weight) by Year ## t = -20.202, df = 6985.4, p-value < 2.2e-16 ## alternative hypothesis: true difference in means between group 1990 and group 2010 is not equal to 0 ## 95 percent confidence interval: ##  -0.03971348 -0.03268805 ## sample estimates: ## mean in group 1990 mean in group 2010  ##           1.903711           1.939912 wilcox.test(Weight ~ Year, brfss_male) ##  ##  Wilcoxon rank sum test with continuity correction ##  ## data:  Weight by Year ## W = 5754766, p-value < 2.2e-16 ## alternative hypothesis: true location shift is not equal to 0"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"linear-regression","dir":"Articles","previous_headings":"US CDC Behavioral Risk Factor Surveillance System survey data > Statistical analysis","what":"Linear regression","title":"Day 2: Data Management, Visualization, and Analysis","text":"‘BRFSS Male Subset’ figure shows linear relations square root Weight Height year.  calculate regression, assess significance? focus Male 2010 data. answer fit linear regression data. R, done fitting linear model (lm()) summarizing result. ANOVA table shows relationship highly significant. ‘Adjusted R-squared’ value indicates 17% variation Weight accounted Height. estimated coefficient associated Height slope line, indicating square root Weight increases 0.0048498 every increase Height 1 cm. aside, one might hope plot(fit) plot regression line. Actually, creates series diagnostic plots help us assess appropriateness choice linear model describing data. advanced analysis using R test, e.g., differences intercept slope regression 1990 versus 2010 straight-forward implement, require sophisticated statistical understanding.","code":"ggplot(brfss_male) +     aes(x = Height, y = log10(Weight), color = Year) +     geom_point() +     geom_smooth(method = \"lm\") +     labs(title = \"BRFSS Male Subset\") ## `geom_smooth()` using formula = 'y ~ x' ## Warning: Removed 104 rows containing non-finite values ## (`stat_smooth()`). ## Warning: Removed 104 rows containing missing values (`geom_point()`). brfss_male_2010 <-     brfss_male |>     filter(Year == \"2010\") ## fit the linear model fit <- lm(log10(Weight) ~ Height, brfss_male_2010)  ## summarize the fit, including a statistical assessment of the fit summary(fit) ##  ## Call: ## lm(formula = log10(Weight) ~ Height, data = brfss_male_2010) ##  ## Residuals: ##      Min       1Q   Median       3Q      Max  ## -0.34142 -0.05229 -0.00645  0.04462  0.45706  ##  ## Coefficients: ##              Estimate Std. Error t value Pr(>|t|)     ## (Intercept) 1.0767107  0.0309565   34.78   <2e-16 *** ## Height      0.0048498  0.0001737   27.91   <2e-16 *** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## Residual standard error: 0.07824 on 3617 degrees of freedom ##   (60 observations deleted due to missingness) ## Multiple R-squared:  0.1772, Adjusted R-squared:  0.177  ## F-statistic: 779.2 on 1 and 3617 DF,  p-value: < 2.2e-16"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"acute-lymphocytic-leukemia-all","dir":"Articles","previous_headings":"","what":"Acute Lymphocytic Leukemia (ALL)","title":"Day 2: Data Management, Visualization, and Analysis","text":"data set old microarray experiment investigating acute lymphocytic leukemia () (PMID 14684422, 16243790; data extracted Bioconductor package). focus phenotypes 128 patients.","code":""},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"data-input-1","dir":"Articles","previous_headings":"Acute Lymphocytic Leukemia (ALL)","what":"Data input","title":"Day 2: Data Management, Visualization, and Analysis","text":"Use readr::read_csv() input ‘.csv’ file.","code":"all_file <- file.choose() # look for 'Rpg520/week-04/extdata/all.csv' all <- readr::read_csv(all_file) glimpse(all) ## Rows: 128 ## Columns: 21 ## $ cod              <chr> \"1005\", \"1010\", \"3002\", \"4006\", \"4007\", \"4008\", \"4010… ## $ diagnosis        <chr> \"5/21/1997\", \"3/29/2000\", \"6/24/1998\", \"7/17/1997\", \"… ## $ sex              <chr> \"M\", \"M\", \"F\", \"M\", \"M\", \"M\", \"F\", \"M\", \"M\", \"M\", \"M\"… ## $ age              <dbl> 53, 19, 52, 38, 57, 17, 18, 16, 15, 40, 33, 55, 5, 18… ## $ BT               <chr> \"B2\", \"B2\", \"B4\", \"B1\", \"B2\", \"B1\", \"B1\", \"B1\", \"B2\",… ## $ remission        <chr> \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",… ## $ CR               <chr> \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",… ## $ date.cr          <chr> \"8/6/1997\", \"6/27/2000\", \"8/17/1998\", \"9/8/1997\", \"9/… ## $ `t(4;11)`        <lgl> FALSE, FALSE, NA, TRUE, FALSE, FALSE, FALSE, FALSE, F… ## $ `t(9;22)`        <lgl> TRUE, FALSE, NA, FALSE, FALSE, FALSE, FALSE, FALSE, F… ## $ cyto.normal      <lgl> FALSE, FALSE, NA, FALSE, FALSE, FALSE, FALSE, FALSE, … ## $ citog            <chr> \"t(9;22)\", \"simple alt.\", NA, \"t(4;11)\", \"del(6q)\", \"… ## $ mol.biol         <chr> \"BCR/ABL\", \"NEG\", \"BCR/ABL\", \"ALL1/AF4\", \"NEG\", \"NEG\"… ## $ `fusion protein` <chr> \"p210\", NA, \"p190\", NA, NA, NA, NA, NA, NA, \"p190\", \"… ## $ mdr              <chr> \"NEG\", \"POS\", \"NEG\", \"NEG\", \"NEG\", \"NEG\", \"POS\", \"NEG… ## $ kinet            <chr> \"dyploid\", \"dyploid\", \"dyploid\", \"dyploid\", \"dyploid\"… ## $ ccr              <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALS… ## $ relapse          <lgl> FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE… ## $ transplant       <lgl> TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE… ## $ f.u              <chr> \"BMT / DEATH IN CR\", \"REL\", \"REL\", \"REL\", \"REL\", \"REL… ## $ `date last seen` <chr> NA, \"8/28/2000\", \"10/15/1999\", \"1/23/1998\", \"11/4/199…"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"exploration-cleaning","dir":"Articles","previous_headings":"Acute Lymphocytic Leukemia (ALL)","what":"Exploration & cleaning","title":"Day 2: Data Management, Visualization, and Analysis","text":"simplicity focus following columns: ‘cod’ unique identifier ‘sex’. recode factor levels ‘Female’ ‘Male’, ambiguity meaning. ‘age’. ‘BT’ represents B- T- cell status. fine-grained, recode new variable ‘BorT’. ‘mol.biol’ summarizes status respect chromosomal status. filter data contain patients values ‘BCR/ABL’ (classic BCR / ABL inversion) ‘NEG’ (chromosomal changes). recode result factor levels ‘BCR/ABL’ ‘NEG’.","code":""},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"select","dir":"Articles","previous_headings":"Acute Lymphocytic Leukemia (ALL) > Exploration & cleaning","what":"select()","title":"Day 2: Data Management, Visualization, and Analysis","text":"Use select() select just columns interest. Re-assign result .","code":"all <-     all |>     select(cod, sex, age, BT, mol.biol)"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"ifelse-and-factor","dir":"Articles","previous_headings":"Acute Lymphocytic Leukemia (ALL) > Exploration & cleaning","what":"ifelse() and factor()","title":"Day 2: Data Management, Visualization, and Analysis","text":"‘sex’ currently character vector two values ‘F’ ‘M’, well missing values can remove individuals whose sex unknown using filter(!.na(sex)). Use ifelse() translate ‘F’ ‘M’ ‘Female’ ‘Male’, factor() column factor","code":"all |>     count(sex) ## # A tibble: 3 × 2 ##   sex       n ##   <chr> <int> ## 1 F        42 ## 2 M        83 ## 3 NA        3 all  |>     filter(!is.na(sex)) |>     mutate(         sex = factor(             ifelse(sex == \"F\", \"Female\", \"Male\"),             levels = c(\"Female\", \"Male\")         )     ) ## # A tibble: 125 × 5 ##    cod   sex      age BT    mol.biol ##    <chr> <fct>  <dbl> <chr> <chr>    ##  1 1005  Male      53 B2    BCR/ABL  ##  2 1010  Male      19 B2    NEG      ##  3 3002  Female    52 B4    BCR/ABL  ##  4 4006  Male      38 B1    ALL1/AF4 ##  5 4007  Male      57 B2    NEG      ##  6 4008  Male      17 B1    NEG      ##  7 4010  Female    18 B1    NEG      ##  8 4016  Male      16 B1    NEG      ##  9 6002  Male      15 B2    NEG      ## 10 8001  Male      40 B2    BCR/ABL  ## # ℹ 115 more rows"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"startswith","dir":"Articles","previous_headings":"Acute Lymphocytic Leukemia (ALL) > Exploration & cleaning","what":"startsWith()","title":"Day 2: Data Management, Visualization, and Analysis","text":"BT column describes whether individuals B- T-cell . several different grades . interested simplifying just two values, ‘B’ ‘T’, based first letter vector element. startsWith() function returns TRUE time element first argument starts second argument. can combine ifelse() factor() mutate BT","code":"all |>     count(BT) ## # A tibble: 10 × 2 ##    BT        n ##    <chr> <int> ##  1 B         5 ##  2 B1       19 ##  3 B2       36 ##  4 B3       23 ##  5 B4       12 ##  6 T         5 ##  7 T1        1 ##  8 T2       15 ##  9 T3       10 ## 10 T4        2 x <- c(\"B\", \"B1\", \"T\") startsWith(x, \"B\") ## [1]  TRUE  TRUE FALSE all |>     mutate(         BT = factor(             ifelse(startsWith(BT, \"B\"), \"B\", \"T\"),             levels = c(\"B\", \"T\")         )     ) ## # A tibble: 128 × 5 ##    cod   sex     age BT    mol.biol ##    <chr> <chr> <dbl> <fct> <chr>    ##  1 1005  M        53 B     BCR/ABL  ##  2 1010  M        19 B     NEG      ##  3 3002  F        52 B     BCR/ABL  ##  4 4006  M        38 B     ALL1/AF4 ##  5 4007  M        57 B     NEG      ##  6 4008  M        17 B     NEG      ##  7 4010  F        18 B     NEG      ##  8 4016  M        16 B     NEG      ##  9 6002  M        15 B     NEG      ## 10 8001  M        40 B     BCR/ABL  ## # ℹ 118 more rows"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"in","dir":"Articles","previous_headings":"Acute Lymphocytic Leukemia (ALL) > Exploration & cleaning","what":"%in%","title":"Day 2: Data Management, Visualization, and Analysis","text":"‘mol.biol’ also character vector several different values. filter include ‘BCR/ABL’ ‘NEG’ samples using %%. %% ‘infix’ operator (like ~) left-hand side right-hand side. left-hand side vector values interested . right-hand side also vector, represents (mathematical) ‘set’ values. %% asks, element left-hand size, element member set right hand side. Filtering dataset accomplished Re-coding filtered values ‘mol.biol’ uses factor() way already seen ‘sex’.","code":"all |>     count(mol.biol) ## # A tibble: 6 × 2 ##   mol.biol     n ##   <chr>    <int> ## 1 ALL1/AF4    10 ## 2 BCR/ABL     37 ## 3 E2A/PBX1     5 ## 4 NEG         74 ## 5 NUP-98       1 ## 6 p15/p16      1 x <- c(1, 2, 3, 4, 5) x %in% c(2, 5) ## [1] FALSE  TRUE FALSE FALSE  TRUE all |>     filter(mol.biol %in% c(\"BCR/ABL\", \"NEG\")) ## # A tibble: 111 × 5 ##    cod   sex     age BT    mol.biol ##    <chr> <chr> <dbl> <chr> <chr>    ##  1 1005  M        53 B2    BCR/ABL  ##  2 1010  M        19 B2    NEG      ##  3 3002  F        52 B4    BCR/ABL  ##  4 4007  M        57 B2    NEG      ##  5 4008  M        17 B1    NEG      ##  6 4010  F        18 B1    NEG      ##  7 4016  M        16 B1    NEG      ##  8 6002  M        15 B2    NEG      ##  9 8001  M        40 B2    BCR/ABL  ## 10 8011  M        33 B3    BCR/ABL  ## # ℹ 101 more rows"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"data-cleaning-pipeline","dir":"Articles","previous_headings":"Acute Lymphocytic Leukemia (ALL) > Exploration & cleaning","what":"Data cleaning pipeline","title":"Day 2: Data Management, Visualization, and Analysis","text":"Putting filtering re-coding steps together, initial cleaning results ","code":"all_subset <-     all |>     ## columns of interest     select(cod, sex, age, BT, mol.biol) |>     ## rows of interest     filter(         !is.na(sex),         mol.biol %in% c(\"BCR/ABL\", \"NEG\")     ) |>     ## re-coding sex, mol.bio, BT     mutate(         sex = factor(             ifelse(sex == \"F\", \"Female\", \"Male\"),             levels = c(\"Female\", \"Male\")         ),         BT = factor(             ifelse(startsWith(BT, \"B\"), \"B\", \"T\"),             levels = c(\"B\", \"T\")         ),         mol.biol = factor(mol.biol, levels = c(\"BCR/ABL\", \"NEG\"))     )"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"data-exploration-1","dir":"Articles","previous_headings":"Acute Lymphocytic Leukemia (ALL)","what":"Data exploration","title":"Day 2: Data Management, Visualization, and Analysis","text":"basic characterize subset might group sex summarize number average age group. twice many Male Female samples; average age Female samples 4 years older Male samples. can visualize distribution ages several ways, illustrated previous case study. create box plot geom_boxplot(), overlay individual points using geom_jitter() (geom displays point bit ‘jitter’ away actual value – instead plotted exactly ‘Female’ ‘Male’ line, points offset random amount).  following table counts number ‘BCR/ABL’ ‘NEG’ among ‘Female’ ‘Male’ samples; seems like disproportionate number ‘Male’ ‘NEG’ (chromosomally normal) individuals. similar tally B- T-cell ‘Female’ ‘Male’ samples … count ‘BT’ ‘mol.biol’ sex Note T-cell, BCR/ABL samples. biological reasons, artifact procedures used data collection? limit bias statistical questions can asked?","code":"all_subset |>     group_by(sex) |>     summarize(         n = n(),         av_age = mean(age, na.rm = TRUE)     ) ## # A tibble: 2 × 3 ##   sex        n av_age ##   <fct>  <int>  <dbl> ## 1 Female    35   34.8 ## 2 Male      74   30.9 ggplot(all_subset) +     aes(x = sex, y = age) +     geom_boxplot() +     geom_jitter(width = .2) ## Warning: Removed 2 rows containing non-finite values (`stat_boxplot()`). ## Warning: Removed 2 rows containing missing values (`geom_point()`). all_subset |>     count(mol.biol, sex) |>     tidyr::pivot_wider(names_from = \"sex\", values_from = \"n\") ## # A tibble: 2 × 3 ##   mol.biol Female  Male ##   <fct>     <int> <int> ## 1 BCR/ABL      16    21 ## 2 NEG          19    53 all_subset |>     count(BT, sex) |>     tidyr::pivot_wider(names_from = \"sex\", values_from = \"n\") ## # A tibble: 2 × 3 ##   BT    Female  Male ##   <fct>  <int> <int> ## 1 B         28    50 ## 2 T          7    24 all_subset |>     count(BT, mol.biol, sex) |>     tidyr::pivot_wider(names_from = \"sex\", values_from = \"n\") ## # A tibble: 3 × 4 ##   BT    mol.biol Female  Male ##   <fct> <fct>     <int> <int> ## 1 B     BCR/ABL      16    21 ## 2 B     NEG          12    29 ## 3 T     NEG           7    24"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"statistical-analysis-1","dir":"Articles","previous_headings":"Acute Lymphocytic Leukemia (ALL)","what":"Statistical analysis","title":"Day 2: Data Management, Visualization, and Analysis","text":"t-test indicates difference Male Female age noted statistically significant noted differences number ‘BCR/ABL’ ‘NEG’ samples respect sex. Chi-squared test can used assess whether differences statistically significant. Look help page ?chisq.test. idea first argument vector observations one variable (e.g., mol.biol) second argument second variable (sex). Unlike t.test, data= argument, formula (~) interface. base R one might use $ access individual columns tibble, test performed convenient variation use function (), allows one write test P-value indicates differences counts ‘BCR/ABL’ ‘NEG’ observed ‘Female’ ‘Male’ statistically supported. similar conclusion applies BT sex.","code":"t.test(age ~ sex, all_subset) ##  ##  Welch Two Sample t-test ##  ## data:  age by sex ## t = 1.3901, df = 66.316, p-value = 0.1691 ## alternative hypothesis: true difference in means between group Female and group Male is not equal to 0 ## 95 percent confidence interval: ##  -1.687236  9.424537 ## sample estimates: ## mean in group Female   mean in group Male  ##             34.77143             30.90278 chisq.test(all_subset$mol.biol, all_subset$sex) all_subset |>     with(chisq.test(mol.biol, sex)) ##  ##  Pearson's Chi-squared test with Yates' continuity correction ##  ## data:  mol.biol and sex ## X-squared = 2.4586, df = 1, p-value = 0.1169 all_subset |>     with(chisq.test(BT, sex)) ##  ##  Pearson's Chi-squared test with Yates' continuity correction ##  ## data:  BT and sex ## X-squared = 1.2454, df = 1, p-value = 0.2644"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_2.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Day 2: Data Management, Visualization, and Analysis","text":"reproducibility, record software versions used create document","code":"sessionInfo() ## R version 4.3.2 (2023-10-31) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Ubuntu 22.04.3 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 ##  ## locale: ##  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        ##  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    ##  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           ## [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    ##  ## time zone: UTC ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] ggplot2_3.4.4 dplyr_1.1.4   ##  ## loaded via a namespace (and not attached): ##  [1] sass_0.4.8        utf8_1.2.4        generics_0.1.3    tidyr_1.3.1       ##  [5] lattice_0.21-9    stringi_1.8.3     hms_1.1.3         digest_0.6.34     ##  [9] magrittr_2.0.3    evaluate_0.23     grid_4.3.2        fastmap_1.1.1     ## [13] Matrix_1.6-1.1    jsonlite_1.8.8    mgcv_1.9-0        purrr_1.0.2       ## [17] fansi_1.0.6       scales_1.3.0      textshaping_0.3.7 jquerylib_0.1.4   ## [21] cli_3.6.2         rlang_1.1.3       crayon_1.5.2      splines_4.3.2     ## [25] bit64_4.0.5       munsell_0.5.0     withr_3.0.0       cachem_1.0.8      ## [29] yaml_2.3.8        tools_4.3.2       parallel_4.3.2    tzdb_0.4.0        ## [33] memoise_2.0.1     colorspace_2.1-0  vctrs_0.6.5       R6_2.5.1          ## [37] lifecycle_1.0.4   stringr_1.5.1     fs_1.6.3          bit_4.0.5         ## [41] vroom_1.6.5       ragg_1.2.7        pkgconfig_2.0.3   desc_1.4.3        ## [45] pkgdown_2.0.7     pillar_1.9.0      bslib_0.6.1       gtable_0.3.4      ## [49] glue_1.7.0        systemfonts_1.0.5 highr_0.10        xfun_0.42         ## [53] tibble_3.2.1      tidyselect_1.2.0  knitr_1.45        farver_2.1.1      ## [57] nlme_3.1-163      htmltools_0.5.7   labeling_0.4.3    rmarkdown_2.25    ## [61] readr_2.1.5       compiler_4.3.2"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_3.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Day 3: Single Cell Data; Survival Analysis","text":"Today work two cancer-relevant case studies. first looks single-cell RNAseq, aiming understand can visualize ‘UMAP’ projection cell types. second introduces survival analysis working data present ‘Kaplan-Meier’ curve. workshop material means exhaustive!","code":""},{"path":"https://mtmorgan.github.io/RPG520/articles/day_3.html","id":"single-cell-rnaseq","dir":"Articles","previous_headings":"","what":"Single-cell RNAseq","title":"Day 3: Single Cell Data; Survival Analysis","text":"case study illustrates R can used understand single-cell RNAseq data, assuming ‘heavy lifting’ transforming raw FASTQ files normalized matrices counts measuring expression gene cell done , e.g., bioinformatics core. R can used summarize biological sample cell attributes, e.g., number donors cells per donor. Visualizations like UMAP plots showing cell expression patterns two-dimensional space can easily generated annotated. Individual genes can annotated additional information, e.g., description gene genes particular pathways. next article introduces comprehensive work flows. data set come CELLxGENE data portal. dataset breast epithelial cells. dataset relatively typical single-cell experimental data sets likely generated individual research projects. data downloaded using cellxgenedp pacakge, information extracted file using zellkonverter rhdf5 packages. packages available Bioconductor, vignettes describing use.","code":""},{"path":"https://mtmorgan.github.io/RPG520/articles/day_3.html","id":"input","dir":"Articles","previous_headings":"Single-cell RNAseq","what":"Input","title":"Day 3: Single Cell Data; Survival Analysis","text":", use dplyr data manipulation, readr data input. Read ‘csv’ file summarizing infomration cell experiment.","code":"library(dplyr) cell_file <- file.choose() # find 'scrnaseq-cell-data.csv' cell <- readr::read_csv(cell_file) glimpse(cell) ## Rows: 31,696 ## Columns: 37 ## $ cell_id                                  <chr> \"CMGpool_AAACCCAAGGACAACC\", \"… ## $ UMAP_1                                   <dbl> -5.9931696, -6.7217583, -9.01… ## $ UMAP_2                                   <dbl> -1.9311870, -1.3059803, -3.39… ## $ donor_id                                 <chr> \"pooled [D9,D7,D8,D10,D6]\", \"… ## $ self_reported_ethnicity_ontology_term_id <chr> \"HANCESTRO:0005\", \"HANCESTRO:… ## $ donor_BMI                                <chr> \"pooled [30.5,22.7,23.5,26.8,… ## $ donor_times_pregnant                     <chr> \"pooled [3,0,3,2,2]\", \"pooled… ## $ family_history_breast_cancer             <chr> \"pooled [unknown,False,False,… ## $ organism_ontology_term_id                <chr> \"NCBITaxon:9606\", \"NCBITaxon:… ## $ tyrer_cuzick_lifetime_risk               <chr> \"pooled [12,14.8,8.8,14.3,20.… ## $ sample_uuid                              <chr> \"pooled [f008c67a-abb4-4563-8… ## $ sample_preservation_method               <chr> \"cryopreservation\", \"cryopres… ## $ tissue_ontology_term_id                  <chr> \"UBERON:0035328\", \"UBERON:003… ## $ development_stage_ontology_term_id       <chr> \"HsapDv:0000087\", \"HsapDv:000… ## $ suspension_uuid                          <chr> \"38d793cb-d811-4863-aec0-2fa7… ## $ suspension_type                          <chr> \"cell\", \"cell\", \"cell\", \"cell… ## $ library_uuid                             <chr> \"385d8d7c-5038-4f0e-b7f3-ec9a… ## $ assay_ontology_term_id                   <chr> \"EFO:0009922\", \"EFO:0009922\",… ## $ mapped_reference_annotation              <chr> \"GENCODE 28\", \"GENCODE 28\", \"… ## $ is_primary_data                          <lgl> TRUE, TRUE, TRUE, TRUE, TRUE,… ## $ cell_type_ontology_term_id               <chr> \"CL:0011026\", \"CL:0011026\", \"… ## $ author_cell_type                         <chr> \"luminal progenitor\", \"lumina… ## $ disease_ontology_term_id                 <chr> \"PATO:0000461\", \"PATO:0000461… ## $ sex_ontology_term_id                     <chr> \"PATO:0000383\", \"PATO:0000383… ## $ nCount_RNA                               <dbl> 2937, 5495, 5598, 3775, 2146,… ## $ nFeature_RNA                             <dbl> 1183, 1827, 2037, 1448, 1027,… ## $ percent.mito                             <dbl> 0.02076949, 0.03676069, 0.043… ## $ seurat_clusters                          <dbl> 3, 3, 24, 1, 3, 1, 1, 4, 1, 0… ## $ sample_id                                <chr> \"CMGpool\", \"CMGpool\", \"CMGpoo… ## $ cell_type                                <chr> \"progenitor cell\", \"progenito… ## $ assay                                    <chr> \"10x 3' v3\", \"10x 3' v3\", \"10… ## $ disease                                  <chr> \"normal\", \"normal\", \"normal\",… ## $ organism                                 <chr> \"Homo sapiens\", \"Homo sapiens… ## $ sex                                      <chr> \"female\", \"female\", \"female\",… ## $ tissue                                   <chr> \"upper outer quadrant of brea… ## $ self_reported_ethnicity                  <chr> \"European\", \"European\", \"Euro… ## $ development_stage                        <chr> \"human adult stage\", \"human a…"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_3.html","id":"exploration-cleaning","dir":"Articles","previous_headings":"Single-cell RNAseq","what":"Exploration & cleaning","title":"Day 3: Single Cell Data; Survival Analysis","text":"Summarize information – many donors, developmental stage, ethnicity? cell types annotated? Cell types ethnicity? Reflecting – replication across non-European ethnicity, statistical insights available. Pooled samples probably require careful treatment downstream analysis.","code":"cell |>     count(donor_id, development_stage, self_reported_ethnicity) ## # A tibble: 7 × 4 ##   donor_id                 development_stage       self_reported_ethnicity     n ##   <chr>                    <chr>                   <chr>                   <int> ## 1 D1                       35-year-old human stage European                 2303 ## 2 D11                      43-year-old human stage Chinese                  7454 ## 3 D2                       60-year-old human stage European                  864 ## 4 D3                       44-year-old human stage African American         2517 ## 5 D4                       42-year-old human stage European                 1771 ## 6 D5                       21-year-old human stage European                 2244 ## 7 pooled [D9,D7,D8,D10,D6] human adult stage       European                14543 cell |>     count(cell_type) ## # A tibble: 6 × 2 ##   cell_type                                    n ##   <chr>                                    <int> ## 1 B cell                                     215 ## 2 basal cell                                7040 ## 3 endocrine cell                              64 ## 4 endothelial cell of lymphatic vessel       133 ## 5 luminal epithelial cell of mammary gland  4257 ## 6 progenitor cell                          19987 cell |>     count(self_reported_ethnicity, cell_type) |>     tidyr::pivot_wider(         names_from = \"self_reported_ethnicity\",         values_from = \"n\"     ) ## # A tibble: 6 × 4 ##   cell_type                                `African American` Chinese European ##   <chr>                                                 <int>   <int>    <int> ## 1 B cell                                                    5      73      137 ## 2 basal cell                                              583    3367     3090 ## 3 endothelial cell of lymphatic vessel                     11      31       91 ## 4 luminal epithelial cell of mammary gland                809     187     3261 ## 5 progenitor cell                                        1109    3755    15123 ## 6 endocrine cell                                           NA      41       23"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_3.html","id":"umap-visualization","dir":"Articles","previous_headings":"Single-cell RNAseq","what":"UMAP visualization","title":"Day 3: Single Cell Data; Survival Analysis","text":"single-cell experiment, cell characterized gene expression 1000’s genes, cell can though occupying position 1000’s dimensions. UMAP (‘Uniform Manifold Approximation Projection’) method reducing dimensionality space cell occupies, simplify visualization operations. UMAP_1 UMAP_2 columns contain coordinates cell space defined UMAP applied cell expression values. Use ‘UMAP’ columns visualize gene expression. code illustrates ggplot() + ... actually returns object can assigned variable (plt) used subsequent computations.  plotly package fantastic tool making interactive plots, e.g., mouse-‘tool tips’ ‘brushing’ selection. toWebGL() function makes display plots many points quick.","code":"library(ggplot2) plt <-     ggplot(cell) +     aes(UMAP_1, UMAP_2, color = cell_type) +     geom_point(pch = \".\") plt library(plotly) ggplotly(plt) |>     toWebGL()"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_3.html","id":"survival-analysis","dir":"Articles","previous_headings":"","what":"Survival analysis","title":"Day 3: Single Cell Data; Survival Analysis","text":"notes online tutorial Emily C. Zabor called Survival Analysis R. addition dplyr ggplot2, use specialized packages survival ggsurvfit.","code":"library(dplyr) library(ggplot2) library(survival) library(ggsurvfit)"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_3.html","id":"data-input-cleaning-exploration","dir":"Articles","previous_headings":"Survival analysis","what":"Data input, cleaning, & exploration","title":"Day 3: Single Cell Data; Survival Analysis","text":"use data set built-R, available survival package. ’s base R data.frame, ’ll coerce immediately dplyr tibble. meaning column documented help page ?lung. make two changes. noted help page, status coded ‘1’ ‘2’ (censored dead; censored sample individual still alive end study), usual convention code ‘0’ ‘1’. sex coded 1 2, seems much sensible use factor levels ‘Female’ ‘Male’) study contains fewer Female Male samples; indication mortality (status ‘1’) higher Male samples. Deceased individuals slightly older censored individuals; surprisingly, time (either end study death) longer censored individuals.","code":"lung <-     lung |>     as_tibble() lung ## # A tibble: 228 × 10 ##     inst  time status   age   sex ph.ecog ph.karno pat.karno meal.cal wt.loss ##    <dbl> <dbl>  <dbl> <dbl> <dbl>   <dbl>    <dbl>     <dbl>    <dbl>   <dbl> ##  1     3   306      2    74     1       1       90       100     1175      NA ##  2     3   455      2    68     1       0       90        90     1225      15 ##  3     3  1010      1    56     1       0       90        90       NA      15 ##  4     5   210      2    57     1       1       90        60     1150      11 ##  5     1   883      2    60     1       0      100        90       NA       0 ##  6    12  1022      1    74     1       1       50        80      513       0 ##  7     7   310      2    68     2       2       70        60      384      10 ##  8    11   361      2    71     2       2       60        80      538       1 ##  9     1   218      2    53     1       1       70        80      825      16 ## 10     7   166      2    61     1       2       70        70      271      34 ## # ℹ 218 more rows lung <-     lung |>     mutate(         status = factor(             ifelse(status == 1, \"Censored\", \"Death\"),             levels = c(\"Censored\", \"Death\")         ),         sex = factor(             ifelse(sex == 1, \"Male\", \"Female\"),             levels = c(\"Female\", \"Male\")         )     ) lung |>     count(sex, status) |>     tidyr::pivot_wider(names_from = \"sex\", values_from = \"n\") ## # A tibble: 2 × 3 ##   status   Female  Male ##   <fct>     <int> <int> ## 1 Censored     37    26 ## 2 Death        53   112  lung |>     group_by(status) |>     summarize(n = n(), av_time = mean(time), av_age = mean(age)) ## # A tibble: 2 × 4 ##   status       n av_time av_age ##   <fct>    <int>   <dbl>  <dbl> ## 1 Censored    63    363.   60.3 ## 2 Death      165    283    63.3"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_3.html","id":"statistical-analysis","dir":"Articles","previous_headings":"Survival analysis","what":"Statistical analysis","title":"Day 3: Single Cell Data; Survival Analysis","text":"survival package introduces function Surv() combines information time status. first 6 rows lung, first 6 values returned Surv() Note + associated third sixth elements, corresponding status ‘0’ (censored) lung. Use survfit() fit survival model data. model asks ‘probability survival X number days, given time status observations?’. formula , ~ 1, indicates include co-variates, like sex samples. basic plot illustrates probability survival declines time; dashed lines represent confidence intervals. little covered .  fit object can used calculate various statistics, e.g., probability surviving 180, 360, 540, 720 days complicated model might ask survival sex. Construct model adding sex (covariate) right-hand side formula; subsequent steps , now information available sex. survdiff() one way test effect sex survival. See also Cox proportional hazards model.","code":"lung |>     head() ## # A tibble: 6 × 10 ##    inst  time status     age sex   ph.ecog ph.karno pat.karno meal.cal wt.loss ##   <dbl> <dbl> <fct>    <dbl> <fct>   <dbl>    <dbl>     <dbl>    <dbl>   <dbl> ## 1     3   306 Death       74 Male        1       90       100     1175      NA ## 2     3   455 Death       68 Male        0       90        90     1225      15 ## 3     3  1010 Censored    56 Male        0       90        90       NA      15 ## 4     5   210 Death       57 Male        1       90        60     1150      11 ## 5     1   883 Death       60 Male        0      100        90       NA       0 ## 6    12  1022 Censored    74 Male        1       50        80      513       0  lung |>     with(Surv(time, status == \"Death\")) |>     head() ## [1]  306   455  1010+  210   883  1022+ fit <- survfit(Surv(time, status == \"Death\") ~ 1, lung) fit ## Call: survfit(formula = Surv(time, status == \"Death\") ~ 1, data = lung) ##  ##        n events median 0.95LCL 0.95UCL ## [1,] 228    165    310     285     363 plot(fit) days <- c(180, 360, 540, 720) summary(fit, times = days) ## Call: survfit(formula = Surv(time, status == \"Death\") ~ 1, data = lung) ##  ##  time n.risk n.event survival std.err lower 95% CI upper 95% CI ##   180    160      63    0.722  0.0298       0.6655        0.783 ##   360     70      54    0.434  0.0358       0.3693        0.510 ##   540     33      26    0.255  0.0344       0.1962        0.333 ##   720     14      15    0.125  0.0290       0.0789        0.197 fit_sex <- survfit(Surv(time, status == \"Death\") ~ sex, lung) fit_sex ## Call: survfit(formula = Surv(time, status == \"Death\") ~ sex, data = lung) ##  ##              n events median 0.95LCL 0.95UCL ## sex=Female  90     53    426     348     550 ## sex=Male   138    112    270     212     310 summary(fit_sex, times = days) ## Call: survfit(formula = Surv(time, status == \"Death\") ~ sex, data = lung) ##  ##                 sex=Female  ##  time n.risk n.event survival std.err lower 95% CI upper 95% CI ##   180     71      14    0.842  0.0387        0.770        0.922 ##   360     33      20    0.560  0.0586        0.457        0.688 ##   540     16      10    0.368  0.0630        0.263        0.515 ##   720      7       5    0.218  0.0641        0.123        0.388 ##  ##                 sex=Male  ##  time n.risk n.event survival std.err lower 95% CI upper 95% CI ##   180     89      49   0.6445  0.0408        0.569        0.730 ##   360     37      34   0.3553  0.0437        0.279        0.452 ##   540     17      16   0.1897  0.0385        0.127        0.282 ##   720      7      10   0.0781  0.0276        0.039        0.156 survdiff(Surv(time, status == \"Death\") ~ sex, lung) ## Call: ## survdiff(formula = Surv(time, status == \"Death\") ~ sex, data = lung) ##  ##              N Observed Expected (O-E)^2/E (O-E)^2/V ## sex=Female  90       53     73.4      5.68      10.3 ## sex=Male   138      112     91.6      4.55      10.3 ##  ##  Chisq= 10.3  on 1 degrees of freedom, p= 0.001"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_3.html","id":"visualization","dir":"Articles","previous_headings":"Survival analysis","what":"Visualization","title":"Day 3: Single Cell Data; Survival Analysis","text":"Functions ggsurvfit package provide ggplot2-style plotting functionality. plot survivorship Male Female samples ‘lung’ data set, including confidence intervals.","code":"library(ggsurvfit) survfit(Surv(time, status == \"Death\") ~ sex, lung) |>     ggsurvfit() +     add_confidence_interval()"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_3.html","id":"next-steps","dir":"Articles","previous_headings":"Survival analysis","what":"Next steps","title":"Day 3: Single Cell Data; Survival Analysis","text":"survival package contains number vignettes Start ‘survival’ vignette vignette(package = \"survival\", \"survival\") area particular interest .","code":"vignette(package = \"survival\") ## Vignettes in package 'survival': ##  ## adjcurve                Adjusted Survival Curves (source, pdf) ## approximate             Approximating a Cox Model (source, pdf) ## redistribute            Brier scores and the redistribute-to-the-right ##                         algorithm (source, pdf) ## concordance             Concordance (source, pdf) ## discrim                 Discrimination and Calibration (source, pdf) ## matrix                  Matrix exponentials (source, pdf) ## compete                 Multi-state models and competing risks (source, ##                         pdf) ## multi                   Multi-state survival curves (source, pdf) ## other                   Other vignettes (source, pdf) ## population              Population contrasts (source, pdf) ## tiedtimes               Roundoff error and tied times (source, pdf) ## splines                 Splines, plots, and interactions (source, pdf) ## survival                The survival package (source, pdf) ## timedep                 Using Time Dependent Covariates (source, pdf) ## validate                Validation (source, pdf)"},{"path":"https://mtmorgan.github.io/RPG520/articles/day_3.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Day 3: Single Cell Data; Survival Analysis","text":"reproducibility, record software versions used create document","code":"sessionInfo() ## R version 4.3.2 (2023-10-31) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Ubuntu 22.04.3 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 ##  ## locale: ##  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        ##  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    ##  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           ## [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    ##  ## time zone: UTC ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] ggsurvfit_1.0.0 survival_3.5-7  plotly_4.10.4   ggplot2_3.4.4   ## [5] dplyr_1.1.4     ##  ## loaded via a namespace (and not attached): ##  [1] gtable_0.3.4      xfun_0.42         bslib_0.6.1       htmlwidgets_1.6.4 ##  [5] lattice_0.21-9    tzdb_0.4.0        vctrs_0.6.5       tools_4.3.2       ##  [9] crosstalk_1.2.1   generics_0.1.3    parallel_4.3.2    tibble_3.2.1      ## [13] fansi_1.0.6       highr_0.10        pkgconfig_2.0.3   Matrix_1.6-1.1    ## [17] data.table_1.15.0 desc_1.4.3        lifecycle_1.0.4   compiler_4.3.2    ## [21] farver_2.1.1      stringr_1.5.1     textshaping_0.3.7 munsell_0.5.0     ## [25] htmltools_0.5.7   sass_0.4.8        yaml_2.3.8        lazyeval_0.2.2    ## [29] pillar_1.9.0      pkgdown_2.0.7     crayon_1.5.2      jquerylib_0.1.4   ## [33] tidyr_1.3.1       ellipsis_0.3.2    cachem_1.0.8      tidyselect_1.2.0  ## [37] digest_0.6.34     stringi_1.8.3     purrr_1.0.2       labeling_0.4.3    ## [41] splines_4.3.2     fastmap_1.1.1     grid_4.3.2        colorspace_2.1-0  ## [45] cli_3.6.2         magrittr_2.0.3    utf8_1.2.4        broom_1.0.5       ## [49] readr_2.1.5       withr_3.0.0       backports_1.4.1   scales_1.3.0      ## [53] bit64_4.0.5       rmarkdown_2.25    httr_1.4.7        bit_4.0.5         ## [57] ragg_1.2.7        hms_1.1.3         memoise_2.0.1     evaluate_0.23     ## [61] knitr_1.45        viridisLite_0.4.2 rlang_1.1.3       glue_1.7.0        ## [65] vroom_1.6.5       jsonlite_1.8.8    R6_2.5.1          systemfonts_1.0.5 ## [69] fs_1.6.3"},{"path":[]},{"path":"https://mtmorgan.github.io/RPG520/articles/z_appendix.html","id":"r","dir":"Articles","previous_headings":"Installation","what":"R","title":"Appendix","text":"Install R operating system Comprehensive R Archive Network CRAN. box top page links Linux, macOS, Windows. Windows, see link install R first time. link download installer can double-clicked. Install regular user, system administrator. macOS, use ‘R-4.3.2-arm64.pkg’ installer newer (M1 / M2 macOS) ‘R-4.3.2-x86_64.pkg’ Intel macs. Linux systems can course complicated; follow links operating system.","code":""},{"path":"https://mtmorgan.github.io/RPG520/articles/z_appendix.html","id":"rstudio","dir":"Articles","previous_headings":"Installation","what":"RStudio","title":"Appendix","text":"possible use R without using RStudio (usually use R, instance), many people use open-source version RStudio. Download open-source version RStudio Desktop Posit, company produces RStudio.","code":""},{"path":"https://mtmorgan.github.io/RPG520/articles/z_appendix.html","id":"packages","dir":"Articles","previous_headings":"","what":"Packages","title":"Appendix","text":"installing R laptop purposes course, ’ll need install packages use. R CCR many packages pre-installed. 20,000 packages CRAN Bioconductor, point need package installed. Follow general approach. Note packages need installed ; installed, can used separate R sessions using library() pkg::function() notation.","code":""},{"path":"https://mtmorgan.github.io/RPG520/articles/z_appendix.html","id":"cran-package-installation","dir":"Articles","previous_headings":"Packages","what":"CRAN package installation","title":"Appendix","text":"Start creating vector packages install. workshop, used following packages. Use setdiff() (remove vector first argument elements occur vector second argument) packages currently installed remain. Finally, use function install.packages() install required packages central CRAN repository.","code":"pkgs <- c(     \"readr\", \"dplyr\", \"tidyr\", \"ggplot2\",     \"plotly\", \"survival\", \"ggsurvfit\" ) pkgs <- setdiff(pkgs, rownames(installed.packages())) install.packages(pkgs, repos = \"https://CRAN.R-project.org\")"},{"path":"https://mtmorgan.github.io/RPG520/articles/z_appendix.html","id":"bioconductor-packages","dir":"Articles","previous_headings":"Packages","what":"Bioconductor packages","title":"Appendix","text":"Bioconductor packages require slightly different installation procedure. Make sure BiocManager package installed CRAN install Bioconductor (CRAN) packages needed","code":"pkgs <- \"BiocManager\" pkgs <- setdiff(pkgs, rownames(installed.packages())) install.packages(pkgs, repos = \"https://CRAN.R-project.org\") pkgs <- c(     \"cellxgenedp\", # Bioconductor package     \"Seurat\"       # CRAN package ) pkgs <- setdiff(pkgs, rownames(installed.packages())) BiocManager::install(pkgs)"},{"path":"https://mtmorgan.github.io/RPG520/articles/z_appendix.html","id":"updating-packages","dir":"Articles","previous_headings":"Packages","what":"Updating packages","title":"Appendix","text":"install.packages() BiocManager::install() report packages --date newer version available. Usually good idea using recent version available. two situations might wish continue using older packages. tight deadline (e.g., thesis defense, paper submission). Updating packages can sometimes introduce changes break existing code, can time consuming track . Reproducibility. Packages sometimes introduce changes result (hopefully slightly) different outcomes, perhaps packages adopts newer algorithm. might desireable, e.g., paper submitted reviewer says ‘excellent expect …’ requires minor addition orginal analysis, try reproduce original analysis longer possible changes underlying software. number strategies taking ‘snapshot’ software versions used particular analysis (e.g., renv package), become serious using R valuable explore resources need reproduce .","code":""},{"path":"https://mtmorgan.github.io/RPG520/articles/z_appendix.html","id":"faq-binary-or-source-packages","dir":"Articles","previous_headings":"Packages","what":"FAQ: binary or source packages?","title":"Appendix","text":"Windows macOS, one might sometimes see message indicates ‘binary’ package available, ‘source’ package recent. Almost always best response stay ‘binary’ package – -recent ‘source’ package likely made available short time frame (within week), indicates package difficult install even wizards CRAN – mortals like become proficient install Windows macOS packages source.","code":""},{"path":"https://mtmorgan.github.io/RPG520/articles/z_appendix.html","id":"data-used-in-this-workshop","dir":"Articles","previous_headings":"","what":"Data used in this workshop","title":"Appendix","text":"Datasets used workshop available CCR. can also accessed internet. URL dataset base_url pasted file name used document. Thus dataset available can read directly R downloaded disk easy re-use","code":"base_url <-     \"https://raw.githubusercontent.com/mtmorgan/RPG520/main/inst/extdata/\" ALL_url <- paste0(base_url, \"ALL.csv\") all <- readr::read_csv(ALL_url) download.file(ALL_url, \"ALL.csv\")"},{"path":[]},{"path":"https://mtmorgan.github.io/RPG520/articles/z_appendix.html","id":"tidy-versus-wide-data","dir":"Articles","previous_headings":"Questions arising","what":"‘tidy’ versus ‘wide’ data","title":"Appendix","text":"Suppose observed tumor weight 5 mice 3 weeks. represent data tibble / data.frame columns ‘mouse’, ‘week’, ‘tumor_weight’. row represents observation. column represents variable. combination ‘mouse’ ‘week’ associated observation ’tumor_weight`. Tidy data simplifies data management use throughout workshop. instance, ’s easy compute average tumor weight week add another observation, e.g., mouse_weight original data tumor\\_weight represented ‘wide’ format, e.g., representation might useful summary paper presentation, less easy manipulate, e.g., average tumor weight week? can add ’mouse_weight` data? tidyr vignette provides detailed discussion issues.","code":"library(dplyr) tbl <- tibble(     mouse = rep(LETTERS[1:5], each = 3),     week = rep(1:3, times = 5),     tumor_weight = runif(15) ) tbl ## # A tibble: 15 × 3 ##    mouse  week tumor_weight ##    <chr> <int>        <dbl> ##  1 A         1       0.558  ##  2 A         2       0.401  ##  3 A         3       0.243  ##  4 B         1       0.735  ##  5 B         2       0.325  ##  6 B         3       0.0925 ##  7 C         1       0.263  ##  8 C         2       0.304  ##  9 C         3       0.539  ## 10 D         1       0.411  ## 11 D         2       0.293  ## 12 D         3       0.318  ## 13 E         1       0.644  ## 14 E         2       0.741  ## 15 E         3       0.268 tbl |>     group_by(week) |>     summarize(n_mice = n(), av_wt = mean(tumor_weight)) ## # A tibble: 3 × 3 ##    week n_mice av_wt ##   <int>  <int> <dbl> ## 1     1      5 0.522 ## 2     2      5 0.413 ## 3     3      5 0.292 tbl |>     mutate(mouse_weight = 5 + rnorm(15)) ## # A tibble: 15 × 4 ##    mouse  week tumor_weight mouse_weight ##    <chr> <int>        <dbl>        <dbl> ##  1 A         1       0.558          4.50 ##  2 A         2       0.401          4.87 ##  3 A         3       0.243          4.35 ##  4 B         1       0.735          5.20 ##  5 B         2       0.325          3.10 ##  6 B         3       0.0925         5.02 ##  7 C         1       0.263          5.37 ##  8 C         2       0.304          6.27 ##  9 C         3       0.539          2.40 ## 10 D         1       0.411          4.28 ## 11 D         2       0.293          6.48 ## 12 D         3       0.318          3.47 ## 13 E         1       0.644          6.50 ## 14 E         2       0.741          3.60 ## 15 E         3       0.268          6.99 tbl |>     tidyr::pivot_wider(                names_from = \"week\", names_prefix = \"week_\",                values_from = \"tumor_weight\"            ) ## # A tibble: 5 × 4 ##   mouse week_1 week_2 week_3 ##   <chr>  <dbl>  <dbl>  <dbl> ## 1 A      0.558  0.401 0.243  ## 2 B      0.735  0.325 0.0925 ## 3 C      0.263  0.304 0.539  ## 4 D      0.411  0.293 0.318  ## 5 E      0.644  0.741 0.268"},{"path":"https://mtmorgan.github.io/RPG520/articles/z_appendix.html","id":"minimum-p-values","dir":"Articles","previous_headings":"Questions arising","what":"Minimum p values?","title":"Appendix","text":"Tracking requires pretty expert R knowledge. TL;DR R actually report small p values ‘< 2.2e-16’. actual p value available object returned , e.g., t.test(). noted workshop ‘P-values seem < 2.2e-16, minimum enforced R?’. example read ‘brfss’ data, made ‘Sex’ ‘Year’ factors, created two subsets, samples 2010 Male samples years. Performing t-test ask whether males differed weight years leads output says ‘p-value < 2.2e-16’. see p-value performing regression Weight Height 2010 Male sample (Maybe ’s reassuring note p-value isn’t always ‘< 2.2e-16’, e.g., comparing age Male Female respondents 2010) Emily noted can assign result t.test() anova() variable, use $ extract p-value, e.g., p-value extracted tt indeed less 2.2e-16 t.test() printout lying. 2.2e-16? looked help pages ?t.test ?lm didn’t see anything looked helpful. used expert R knowledge try dig bit . know variable ‘class’, ‘methods’ operate classes, variable printed, actually might involve ‘print’ method perhaps ‘format’ method. OK, class tt? methods defined object class ‘htest’? using expert R knowledge, know ‘print’ method object class ‘htest’ function print.htest looked help ?print.htest. helpful. looked function definition print.htest function used print result returned t.test(). scanned code looking ‘p-value’, spotted lines says ‘object trying print includes p.value, use function format.pval() format p-value output’. OK, ?format.pval. help page actually helpful, way. says format.pval takes argument eps, values Also, help page says eps default value Aha! magic 2.2e-16! help page ?.Machine also helpful-ish, description getting fundamental challenge digital computers – numbers represented sequence bits (0 1 values). means floating point (non-integer) numbers represented approximately – given number bits used represent floating point number, smallest difference can represented without loss precision. .Machine$double.eps reporting smallest difference particular computer, using whatever rules uses decide many bits use floating-point number, can actually represent 1 + x != 1. computers adopt convention representing floating point numbers, usually .Machine$double.eps 2.2e-16. format.pval() saying can’t really tell difference small numbers, can know certain small number smaller smallest number can distinguish – 1.095642e-92 definitely less 2.220446e-16, much less known accuracy. Phew.","code":"t.test(Weight ~ Year, brfss_male) ##  ##  Welch Two Sample t-test ##  ## data:  Weight by Year ## t = -20.751, df = 6549.4, p-value < 2.2e-16 ## alternative hypothesis: true difference in means between group 1990 and group 2010 is not equal to 0 ## 95 percent confidence interval: ##  -8.390845 -6.942327 ## sample estimates: ## mean in group 1990 mean in group 2010  ##           81.17999           88.84657 brfss_male_2010 <-     brfss_male |>     filter(Year == \"2010\") fit <- lm(Weight ~ Height, brfss_male_2010) anova(fit) ## Analysis of Variance Table ##  ## Response: Weight ##             Df  Sum Sq Mean Sq F value    Pr(>F)     ## Height       1  197664  197664   693.8 < 2.2e-16 *** ## Residuals 3617 1030484     285                       ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 t.test(Age ~ Sex, brfss_2010) ##  ##  Welch Two Sample t-test ##  ## data:  Age by Sex ## t = 2.4497, df = 7768.7, p-value = 0.01432 ## alternative hypothesis: true difference in means between group Female and group Male is not equal to 0 ## 95 percent confidence interval: ##  0.1674909 1.5091167 ## sample estimates: ## mean in group Female   mean in group Male  ##             57.08824             56.24993 tt <- t.test(Weight ~ Year, brfss_male) tt$p.value ## [1] 1.095642e-92 class(tt) ## [1] \"htest\" methods(class = \"htest\") ## [1] print ## see '?methods' for accessing help and source code getAnywhere(print.htest) ## A single object matching 'print.htest' was found ## It was found in the following places ##   registered S3 method for print from namespace stats ##   namespace:stats ## with value ##  ## function (x, digits = getOption(\"digits\"), prefix = \"\\t\", ...)  ## { ##     cat(\"\\n\") ##     cat(strwrap(x$method, prefix = prefix), sep = \"\\n\") ##     cat(\"\\n\") ##     cat(\"data:  \", x$data.name, \"\\n\", sep = \"\") ##     out <- character() ##     if (!is.null(x$statistic))  ##         out <- c(out, paste(names(x$statistic), \"=\", format(x$statistic,  ##             digits = max(1L, digits - 2L)))) ##     if (!is.null(x$parameter))  ##         out <- c(out, paste(names(x$parameter), \"=\", format(x$parameter,  ##             digits = max(1L, digits - 2L)))) ##     if (!is.null(x$p.value)) { ##         fp <- format.pval(x$p.value, digits = max(1L, digits -  ##             3L)) ##         out <- c(out, paste(\"p-value\", if (startsWith(fp, \"<\")) fp else paste(\"=\",  ##             fp))) ##     } ##     cat(strwrap(paste(out, collapse = \", \")), sep = \"\\n\") ##     if (!is.null(x$alternative)) { ##         cat(\"alternative hypothesis: \") ##         if (!is.null(x$null.value)) { ##             if (length(x$null.value) == 1L) { ##                 alt.char <- switch(x$alternative, two.sided = \"not equal to\",  ##                   less = \"less than\", greater = \"greater than\") ##                 cat(\"true \", names(x$null.value), \" is \", alt.char,  ##                   \" \", x$null.value, \"\\n\", sep = \"\") ##             } ##             else { ##                 cat(x$alternative, \"\\nnull values:\\n\", sep = \"\") ##                 print(x$null.value, digits = digits, ...) ##             } ##         } ##         else cat(x$alternative, \"\\n\", sep = \"\") ##     } ##     if (!is.null(x$conf.int)) { ##         cat(format(100 * attr(x$conf.int, \"conf.level\")), \" percent confidence interval:\\n\",  ##             \" \", paste(format(x$conf.int[1:2], digits = digits),  ##                 collapse = \" \"), \"\\n\", sep = \"\") ##     } ##     if (!is.null(x$estimate)) { ##         cat(\"sample estimates:\\n\") ##         print(x$estimate, digits = digits, ...) ##     } ##     cat(\"\\n\") ##     invisible(x) ## } ## <bytecode: 0x55f7b06075c0> ## <environment: namespace:stats> if (!is.null(x$p.value)) {         fp <- format.pval(x$p.value, digits = max(1L, digits -              3L)) less than 'eps' are formatted as '\"< [eps]\"' .Machine$double.eps ## [1] 2.220446e-16 double.eps: the smallest positive floating-point number 'x' such that           '1 + x != 1'.  It equals 'double.base ^ ulp.digits' if either           'double.base' is 2 or 'double.rounding' is 0; otherwise, it           is '(double.base ^ double.ulp.digits) / 2'.  Normally           '2.220446e-16'."},{"path":"https://mtmorgan.github.io/RPG520/articles/z_appendix.html","id":"coloring-points-in-ggplot","dir":"Articles","previous_headings":"Questions arising","what":"Coloring points in ggplot","title":"Appendix","text":"’s simple dataset showing relationship miles per gallon ‘mpg’ displacement ‘disp’ points colored transmission (‘’, 0 automatic, 1 manual; using factor() turns continuous variable factor, factors colored using ‘qualitative’ color schemes, rather ‘quantitative’ color schemes)  Suppose ’d like color points differently, say ‘red’ automatic ‘black’ manual transmissions. little googling took add another layer  values can named colors , ‘RBG’ values. mentioned class, color choice arbitrary, rather carefully considered. [RColorBrewer][] package includes palettes carefully considered colors. colorblind-friendly palettes ‘qualitative’ data  can use ‘Paired’ scheme, instance,  help page ?scale_color_manual provides additional detail color points. R Graph Gallery useful resource information.","code":"library(ggplot2) plt <-     ggplot(mtcars) +     aes(x = disp, y = mpg, color = factor(am)) +     geom_point() plt plt +     scale_color_manual(values = c(\"red\", \"black\")) RColorBrewer::display.brewer.all(type = \"qual\", colorblindFriendly=TRUE) plt +     scale_color_brewer(type = \"qual\", palette = \"Paired\")"},{"path":"https://mtmorgan.github.io/RPG520/articles/z_appendix.html","id":"r-flavored-markdown","dir":"Articles","previous_headings":"Questions arising","what":"R-flavored markdown","title":"Appendix","text":"Markdown great plain-text format writing documents reports. R-flavored markdown allows R code ‘chunks’ embedded markdown document. document can processed , e.g., plain markdown html slides share others. processing R code chunks evaluated. means can can describe ’re something, show actually , present figures tables summarizing results. great tool reproducible, communicable research. easy way start use ‘File -> New File -> R Markdown…’ menu RStudio. generates demonstration document can tweak explore. Build HTML pressing ‘knit…’ button markdown document pane. cheat sheet provides hints. Ask Google additional questions.","code":""},{"path":"https://mtmorgan.github.io/RPG520/articles/z_appendix.html","id":"creating-an-r-package","dir":"Articles","previous_headings":"Questions arising","what":"Creating an R package","title":"Appendix","text":"R package can great way bundle analysis reproducible unit, share new analysis methods ’ve developed colleagues. asked ChatGPT tell ‘create R package using devtools, usethis, roxygen2’, got pretty good starting point – give try! package mentioned query devtools: use create() make package skeleton, load_all() package developement load current package R session, check(), build(), install() check package syntactically correct, build ‘tar ball’ sharing others, install R library subsequent use via library(YourPackage). usethis adding components package, e.g., use_vignette() add vigentte, use_mit_license() (instance) add license indicates allow package used others, etc. roxygen2 documenting functions package. Package vignettes (e.g., vignette(package=\"roxygen2\")) Google great resources package development.","code":""},{"path":"https://mtmorgan.github.io/RPG520/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martin Morgan. Author, maintainer.","code":""},{"path":"https://mtmorgan.github.io/RPG520/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Morgan M (2024). RPG520: Course Material Principles Computational Oncology R / Bioconductor Workshop. R package version 0.0.0.9013, https://mtmorgan.github.io/RPG520/.","code":"@Manual{,   title = {RPG520: Course Material for Principles of Computational Oncology R / Bioconductor Workshop},   author = {Martin Morgan},   year = {2024},   note = {R package version 0.0.0.9013},   url = {https://mtmorgan.github.io/RPG520/}, }"},{"path":"https://mtmorgan.github.io/RPG520/index.html","id":"rpg520-course-material-for-principles-of-computational-oncology","dir":"","previous_headings":"","what":"Course Material for Principles of Computational Oncology R / Bioconductor Workshop","title":"Course Material for Principles of Computational Oncology R / Bioconductor Workshop","text":"repository provides course material workshop offered part Roswell Park Comprehensive Cancer Center 2024 graduate course “Principles Computational Oncology”.","code":""},{"path":"https://mtmorgan.github.io/RPG520/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Course Material for Principles of Computational Oncology R / Bioconductor Workshop","text":"Workshop participants need install anything. Others may install package using following commands.","code":"## install.packages(\"devtools\") devtools::install_github(\"mtmorgan/RPG520\")"},{"path":"https://mtmorgan.github.io/RPG520/index.html","id":"content","dir":"","previous_headings":"","what":"Content","title":"Course Material for Principles of Computational Oncology R / Bioconductor Workshop","text":"Day 1 introduces CCR ‘OnDemand’ compute environment, basics R. Day 2 provides two cases studies illustrating use R data management, visualization, statistical analysis. Day 3 illustrates additional cases studies computational oncology emphasis. appendix provides instructions installing R RStudio, managing packages, retrieving data sets used workshop.","code":""}]
